V// source: js/app/viewmodels/appearance.js\u000a$(function () {\u000a    var save = {};\u000a\u000a    // Using the theme color (for the top bar), also recolor the favicon tentacle.\u000a    function themeFavicon(colorname) {\u000a        save.colorName = colorname;\u000a\u000a        // the following is from an Apache licensed snippet:\u000a        // http://blog.roomanna.com/09-24-2011/dynamically-coloring-a-favicon\u000a        var link = document.querySelector("link[rel='shortcut icon']");\u000a        if (!link) {\u000a            link = document.createElement("link");\u000a            link.setAttribute("rel", "shortcut icon");\u000a            document.head.appendChild(link);\u000a        }\u000a\u000a        // try to get the best quality ico possible; prefer svg, the apple-touch pngs are more difficult,\u000a        // but all three of the others give a high-quality ico.\u000a        var faviconUrl =\u000a            document.querySelector("link[rel~='mask-icon-theme']").href ||\u000a            link.href ||\u000a            window.location.origin + "/favicon.ico";\u000a\u000a        function onImageLoaded() {\u000a            var icosize = 256;\u000a\u000a            var canvas = document.createElement("canvas");\u000a            canvas.width = icosize;\u000a            canvas.height = icosize;\u000a\u000a            var context = canvas.getContext("2d");\u000a\u000a            function grayscale() {\u000a                var imageData = context.getImageData(0, 0, canvas.width, canvas.height),\u000a                    pixels = imageData.data,\u000a                    i,\u000a                    l,\u000a                    r,\u000a                    g,\u000a                    b,\u000a                    a,\u000a                    luma;\u000a\u000a                for (i = 0, l = pixels.length; i < l; i += 4) {\u000a                    a = pixels[i + 3];\u000a                    if (a === 0) {\u000a                        continue;\u000a                    }\u000a\u000a                    r = pixels[i];\u000a                    g = pixels[i + 1];\u000a                    b = pixels[i + 2];\u000a\u000a                    luma = r * 0.2126 + g * 0.7152 + b * 0.0722;\u000a\u000a                    pixels[i] = pixels[i + 1] = pixels[i + 2] = luma;\u000a                }\u000a\u000a                context.putImageData(imageData, 0, 0);\u000a            }\u000a\u000a            function colorize(color, alpha) {\u000a                context.globalCompositeOperation = "source-atop";\u000a                context.globalAlpha = alpha;\u000a                context.fillStyle = color;\u000a                context.fillRect(0, 0, canvas.width, canvas.height);\u000a                context.globalCompositeOperation = "source-over";\u000a                context.globalAlpha = 1.0;\u000a            }\u000a\u000a            context.drawImage(img, 0, 0, canvas.width, canvas.height);\u000a            if (save.colorName !== "default") {\u000a                grayscale();\u000a                colorize(save.colorName, 0.3);\u000a            }\u000a            link.type = "image/x-icon";\u000a            link.href = canvas.toDataURL();\u000a        }\u000a\u000a        var img = document.createElement("img");\u000a        img.addEventListener("load", onImageLoaded);\u000a        img.src = faviconUrl;\u000a    }\u000a\u000a    function AppearanceViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.name = parameters[0].appearance_name;\u000a        self.color = parameters[0].appearance_color;\u000a        self.colorTransparent = parameters[0].appearance_colorTransparent;\u000a        self.colorIcon = parameters[0].appearance_colorIcon;\u000a\u000a        function updateIcon() {\u000a            if (self.colorIcon()) {\u000a                themeFavicon(self.color());\u000a            } else {\u000a                themeFavicon("default");\u000a            }\u000a        }\u000a        self.color.subscribe(updateIcon);\u000a        self.colorIcon.subscribe(updateIcon);\u000a        updateIcon();\u000a\u000a        self.brand = ko.pureComputed(function () {\u000a            if (self.name()) return self.name();\u000a            else return gettext("OctoPrint");\u000a        });\u000a\u000a        self.fullbrand = ko.pureComputed(function () {\u000a            if (self.name()) return gettext("OctoPrint") + ": " + self.name();\u000a            else return gettext("OctoPrint");\u000a        });\u000a\u000a        self.title = ko.pureComputed(function () {\u000a            if (self.name()) return self.name() + " [" + gettext("OctoPrint") + "]";\u000a            else return gettext("OctoPrint");\u000a        });\u000a\u000a        self.theme_color = ko.pureComputed(function () {\u000a            switch (self.color()) {\u000a                case "red":\u000a                    return "#bb645f";\u000a                case "orange":\u000a                    return "#e39665";\u000a                case "yellow":\u000a                    return "#e3d765;";\u000a                case "green":\u000a                    return "#98f064";\u000a                case "blue":\u000a                    return "#2e63cc";\u000a                case "violet":\u000a                    return "#9864f0";\u000a                case "black":\u000a                    return "#4f4f4f";\u000a                case "white":\u000a                    return "#e9e9e9";\u000a                case "default":\u000a                default:\u000a                    return "#ebebeb";\u000a            }\u000a        });\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push({\u000a        construct: AppearanceViewModel,\u000a        dependencies: ["settingsViewModel"],\u000a        elements: ["head"]\u000a    });\u000a});\u000a\u000a;\u000a
p0
.