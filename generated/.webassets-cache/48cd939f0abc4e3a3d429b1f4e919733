V// source: js/app/bindings/copywidth.js\u000ako.bindingHandlers.copyWidth = {\u000a    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\u000a        var node = ko.bindingHandlers.copyWidth._getReferenceNode(element, valueAccessor);\u000a        ko.bindingHandlers.copyWidth._setWidth(node, element);\u000a        ko.bindingHandlers.copyWidth._addResizeSensor(node, element);\u000a    },\u000a    update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\u000a        var node = ko.bindingHandlers.copyWidth._getReferenceNode(element, valueAccessor);\u000a        ko.bindingHandlers.copyWidth._setWidth(node, element);\u000a        ko.bindingHandlers.copyWidth._addResizeSensor(node, element);\u000a    },\u000a    _setWidth: function (node, element) {\u000a        var width = node.width();\u000a        if (!width) return;\u000a        if ($(element).width() === width) return;\u000a        element.style.width = width + "px";\u000a    },\u000a    _getReferenceNode: function (element, valueAccessor) {\u000a        var value = ko.utils.unwrapObservable(valueAccessor());\u000a        if (!value) return;\u000a\u000a        var parts = value.split(" ");\u000a        var node = $(element);\u000a        while (parts.length > 0) {\u000a            var part = parts.shift();\u000a            if (part === ":parent") {\u000a                node = node.parent();\u000a            } else {\u000a                var selector = part;\u000a                if (parts.length > 0) {\u000a                    selector += " " + parts.join(" ");\u000a                }\u000a                node = $(selector, node);\u000a                break;\u000a            }\u000a        }\u000a        return node;\u000a    },\u000a    _addResizeSensor: function (node, element) {\u000a        if (element.copyWidthSensor) {\u000a            element.copyWidthSensor.detach();\u000a            delete element.copyWidthSensor;\u000a        }\u000a        element.copyWidthSensor = new ResizeSensor(node, function () {\u000a            ko.bindingHandlers.copyWidth._setWidth(node, element);\u000a        });\u000a    }\u000a};\u000a\u000a;\u000a
p0
.