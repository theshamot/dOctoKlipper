V// source: js/lib/bootstrap/bootstrap.js\u000a/* ===================================================\u000a * bootstrap-transition.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#transitions\u000a * ===================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ========================================================== */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a  /* CSS TRANSITION SUPPORT (http://www.modernizr.com/)\u000a   * ======================================================= */\u000a\u000a  $(function () {\u000a\u000a    $.support.transition = (function () {\u000a\u000a      var transitionEnd = (function () {\u000a\u000a        var el = document.createElement('bootstrap')\u000a          , transEndEventNames = {\u000a               'WebkitTransition' : 'webkitTransitionEnd'\u000a            ,  'MozTransition'    : 'transitionend'\u000a            ,  'OTransition'      : 'oTransitionEnd otransitionend'\u000a            ,  'transition'       : 'transitionend'\u000a            }\u000a          , name\u000a\u000a        for (name in transEndEventNames){\u000a          if (el.style[name] !== undefined) {\u000a            return transEndEventNames[name]\u000a          }\u000a        }\u000a\u000a      }())\u000a\u000a      return transitionEnd && {\u000a        end: transitionEnd\u000a      }\u000a\u000a    })()\u000a\u000a  })\u000a\u000a}(window.jQuery);/* ==========================================================\u000a * bootstrap-alert.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#alerts\u000a * ==========================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ========================================================== */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* ALERT CLASS DEFINITION\u000a  * ====================== */\u000a\u000a  var dismiss = '[data-dismiss="alert"]'\u000a    , Alert = function (el) {\u000a        $(el).on('click', dismiss, this.close)\u000a      }\u000a\u000a  Alert.prototype.close = function (e) {\u000a    var $this = $(this)\u000a      , selector = $this.attr('data-target')\u000a      , $parent\u000a\u000a    if (!selector) {\u000a      selector = $this.attr('href')\u000a      selector = selector && selector.replace(/.*(?=#[^\u005cs]*$)/, '') //strip for ie7\u000a    }\u000a\u000a    $parent = $(selector)\u000a\u000a    e && e.preventDefault()\u000a\u000a    $parent.length || ($parent = $this.hasClass('alert') ? $this : $this.parent())\u000a\u000a    $parent.trigger(e = $.Event('close'))\u000a\u000a    if (e.isDefaultPrevented()) return\u000a\u000a    $parent.removeClass('in')\u000a\u000a    function removeElement() {\u000a      $parent\u000a        .trigger('closed')\u000a        .remove()\u000a    }\u000a\u000a    $.support.transition && $parent.hasClass('fade') ?\u000a      $parent.on($.support.transition.end, removeElement) :\u000a      removeElement()\u000a  }\u000a\u000a\u000a /* ALERT PLUGIN DEFINITION\u000a  * ======================= */\u000a\u000a  var old = $.fn.alert\u000a\u000a  $.fn.alert = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('alert')\u000a      if (!data) $this.data('alert', (data = new Alert(this)))\u000a      if (typeof option == 'string') data[option].call($this)\u000a    })\u000a  }\u000a\u000a  $.fn.alert.Constructor = Alert\u000a\u000a\u000a /* ALERT NO CONFLICT\u000a  * ================= */\u000a\u000a  $.fn.alert.noConflict = function () {\u000a    $.fn.alert = old\u000a    return this\u000a  }\u000a\u000a\u000a /* ALERT DATA-API\u000a  * ============== */\u000a\u000a  $(document).on('click.alert.data-api', dismiss, Alert.prototype.close)\u000a\u000a}(window.jQuery);/* ============================================================\u000a * bootstrap-button.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#buttons\u000a * ============================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ============================================================ */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* BUTTON PUBLIC CLASS DEFINITION\u000a  * ============================== */\u000a\u000a  var Button = function (element, options) {\u000a    this.$element = $(element)\u000a    this.options = $.extend({}, $.fn.button.defaults, options)\u000a  }\u000a\u000a  Button.prototype.setState = function (state) {\u000a    var d = 'disabled'\u000a      , $el = this.$element\u000a      , data = $el.data()\u000a      , val = $el.is('input') ? 'val' : 'html'\u000a\u000a    state = state + 'Text'\u000a    data.resetText || $el.data('resetText', $el[val]())\u000a\u000a    $el[val](data[state] || this.options[state])\u000a\u000a    // push to event loop to allow forms to submit\u000a    setTimeout(function () {\u000a      state == 'loadingText' ?\u000a        $el.addClass(d).attr(d, d) :\u000a        $el.removeClass(d).removeAttr(d)\u000a    }, 0)\u000a  }\u000a\u000a  Button.prototype.toggle = function () {\u000a    var $parent = this.$element.closest('[data-toggle="buttons-radio"]')\u000a\u000a    $parent && $parent\u000a      .find('.active')\u000a      .removeClass('active')\u000a\u000a    this.$element.toggleClass('active')\u000a  }\u000a\u000a\u000a /* BUTTON PLUGIN DEFINITION\u000a  * ======================== */\u000a\u000a  var old = $.fn.button\u000a\u000a  $.fn.button = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('button')\u000a        , options = typeof option == 'object' && option\u000a      if (!data) $this.data('button', (data = new Button(this, options)))\u000a      if (option == 'toggle') data.toggle()\u000a      else if (option) data.setState(option)\u000a    })\u000a  }\u000a\u000a  $.fn.button.defaults = {\u000a    loadingText: 'loading...'\u000a  }\u000a\u000a  $.fn.button.Constructor = Button\u000a\u000a\u000a /* BUTTON NO CONFLICT\u000a  * ================== */\u000a\u000a  $.fn.button.noConflict = function () {\u000a    $.fn.button = old\u000a    return this\u000a  }\u000a\u000a\u000a /* BUTTON DATA-API\u000a  * =============== */\u000a\u000a  $(document).on('click.button.data-api', '[data-toggle^=button]', function (e) {\u000a    var $btn = $(e.target)\u000a    if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\u000a    $btn.button('toggle')\u000a  })\u000a\u000a}(window.jQuery);/* ==========================================================\u000a * bootstrap-carousel.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#carousel\u000a * ==========================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ========================================================== */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* CAROUSEL CLASS DEFINITION\u000a  * ========================= */\u000a\u000a  var Carousel = function (element, options) {\u000a    this.$element = $(element)\u000a    this.$indicators = this.$element.find('.carousel-indicators')\u000a    this.options = options\u000a    this.options.pause == 'hover' && this.$element\u000a      .on('mouseenter', $.proxy(this.pause, this))\u000a      .on('mouseleave', $.proxy(this.cycle, this))\u000a  }\u000a\u000a  Carousel.prototype = {\u000a\u000a    cycle: function (e) {\u000a      if (!e) this.paused = false\u000a      if (this.interval) clearInterval(this.interval);\u000a      this.options.interval\u000a        && !this.paused\u000a        && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\u000a      return this\u000a    }\u000a\u000a  , getActiveIndex: function () {\u000a      this.$active = this.$element.find('.item.active')\u000a      this.$items = this.$active.parent().children()\u000a      return this.$items.index(this.$active)\u000a    }\u000a\u000a  , to: function (pos) {\u000a      var activeIndex = this.getActiveIndex()\u000a        , that = this\u000a\u000a      if (pos > (this.$items.length - 1) || pos < 0) return\u000a\u000a      if (this.sliding) {\u000a        return this.$element.one('slid', function () {\u000a          that.to(pos)\u000a        })\u000a      }\u000a\u000a      if (activeIndex == pos) {\u000a        return this.pause().cycle()\u000a      }\u000a\u000a      return this.slide(pos > activeIndex ? 'next' : 'prev', $(this.$items[pos]))\u000a    }\u000a\u000a  , pause: function (e) {\u000a      if (!e) this.paused = true\u000a      if (this.$element.find('.next, .prev').length && $.support.transition.end) {\u000a        this.$element.trigger($.support.transition.end)\u000a        this.cycle(true)\u000a      }\u000a      clearInterval(this.interval)\u000a      this.interval = null\u000a      return this\u000a    }\u000a\u000a  , next: function () {\u000a      if (this.sliding) return\u000a      return this.slide('next')\u000a    }\u000a\u000a  , prev: function () {\u000a      if (this.sliding) return\u000a      return this.slide('prev')\u000a    }\u000a\u000a  , slide: function (type, next) {\u000a      var $active = this.$element.find('.item.active')\u000a        , $next = next || $active[type]()\u000a        , isCycling = this.interval\u000a        , direction = type == 'next' ? 'left' : 'right'\u000a        , fallback  = type == 'next' ? 'first' : 'last'\u000a        , that = this\u000a        , e\u000a\u000a      this.sliding = true\u000a\u000a      isCycling && this.pause()\u000a\u000a      $next = $next.length ? $next : this.$element.find('.item')[fallback]()\u000a\u000a      e = $.Event('slide', {\u000a        relatedTarget: $next[0]\u000a      , direction: direction\u000a      })\u000a\u000a      if ($next.hasClass('active')) return\u000a\u000a      if (this.$indicators.length) {\u000a        this.$indicators.find('.active').removeClass('active')\u000a        this.$element.one('slid', function () {\u000a          var $nextIndicator = $(that.$indicators.children()[that.getActiveIndex()])\u000a          $nextIndicator && $nextIndicator.addClass('active')\u000a        })\u000a      }\u000a\u000a      if ($.support.transition && this.$element.hasClass('slide')) {\u000a        this.$element.trigger(e)\u000a        if (e.isDefaultPrevented()) return\u000a        $next.addClass(type)\u000a        $next[0].offsetWidth // force reflow\u000a        $active.addClass(direction)\u000a        $next.addClass(direction)\u000a        this.$element.one($.support.transition.end, function () {\u000a          $next.removeClass([type, direction].join(' ')).addClass('active')\u000a          $active.removeClass(['active', direction].join(' '))\u000a          that.sliding = false\u000a          setTimeout(function () { that.$element.trigger('slid') }, 0)\u000a        })\u000a      } else {\u000a        this.$element.trigger(e)\u000a        if (e.isDefaultPrevented()) return\u000a        $active.removeClass('active')\u000a        $next.addClass('active')\u000a        this.sliding = false\u000a        this.$element.trigger('slid')\u000a      }\u000a\u000a      isCycling && this.cycle()\u000a\u000a      return this\u000a    }\u000a\u000a  }\u000a\u000a\u000a /* CAROUSEL PLUGIN DEFINITION\u000a  * ========================== */\u000a\u000a  var old = $.fn.carousel\u000a\u000a  $.fn.carousel = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('carousel')\u000a        , options = $.extend({}, $.fn.carousel.defaults, typeof option == 'object' && option)\u000a        , action = typeof option == 'string' ? option : options.slide\u000a      if (!data) $this.data('carousel', (data = new Carousel(this, options)))\u000a      if (typeof option == 'number') data.to(option)\u000a      else if (action) data[action]()\u000a      else if (options.interval) data.pause().cycle()\u000a    })\u000a  }\u000a\u000a  $.fn.carousel.defaults = {\u000a    interval: 5000\u000a  , pause: 'hover'\u000a  }\u000a\u000a  $.fn.carousel.Constructor = Carousel\u000a\u000a\u000a /* CAROUSEL NO CONFLICT\u000a  * ==================== */\u000a\u000a  $.fn.carousel.noConflict = function () {\u000a    $.fn.carousel = old\u000a    return this\u000a  }\u000a\u000a /* CAROUSEL DATA-API\u000a  * ================= */\u000a\u000a  $(document).on('click.carousel.data-api', '[data-slide], [data-slide-to]', function (e) {\u000a    var $this = $(this), href\u000a      , $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\u005cs]+$)/, '')) //strip for ie7\u000a      , options = $.extend({}, $target.data(), $this.data())\u000a      , slideIndex\u000a\u000a    $target.carousel(options)\u000a\u000a    if (slideIndex = $this.attr('data-slide-to')) {\u000a      $target.data('carousel').pause().to(slideIndex).cycle()\u000a    }\u000a\u000a    e.preventDefault()\u000a  })\u000a\u000a}(window.jQuery);/* =============================================================\u000a * bootstrap-collapse.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#collapse\u000a * =============================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ============================================================ */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* COLLAPSE PUBLIC CLASS DEFINITION\u000a  * ================================ */\u000a\u000a  var Collapse = function (element, options) {\u000a    this.$element = $(element)\u000a    this.options = $.extend({}, $.fn.collapse.defaults, options)\u000a\u000a    if (this.options.parent) {\u000a      this.$parent = $(this.options.parent)\u000a    }\u000a\u000a    this.options.toggle && this.toggle()\u000a  }\u000a\u000a  Collapse.prototype = {\u000a\u000a    constructor: Collapse\u000a\u000a  , dimension: function () {\u000a      var hasWidth = this.$element.hasClass('width')\u000a      return hasWidth ? 'width' : 'height'\u000a    }\u000a\u000a  , show: function () {\u000a      var dimension\u000a        , scroll\u000a        , actives\u000a        , hasData\u000a\u000a      if (this.transitioning || this.$element.hasClass('in')) return\u000a\u000a      dimension = this.dimension()\u000a      scroll = $.camelCase(['scroll', dimension].join('-'))\u000a      actives = this.$parent && this.$parent.find('> .accordion-group > .in')\u000a\u000a      if (actives && actives.length) {\u000a        hasData = actives.data('collapse')\u000a        if (hasData && hasData.transitioning) return\u000a        actives.collapse('hide')\u000a        hasData || actives.data('collapse', null)\u000a      }\u000a\u000a      this.$element[dimension](0)\u000a      this.transition('addClass', $.Event('show'), 'shown')\u000a      $.support.transition && this.$element[dimension](this.$element[0][scroll])\u000a    }\u000a\u000a  , hide: function () {\u000a      var dimension\u000a      if (this.transitioning || !this.$element.hasClass('in')) return\u000a      dimension = this.dimension()\u000a      this.reset(this.$element[dimension]())\u000a      this.transition('removeClass', $.Event('hide'), 'hidden')\u000a      this.$element[dimension](0)\u000a    }\u000a\u000a  , reset: function (size) {\u000a      var dimension = this.dimension()\u000a\u000a      this.$element\u000a        .removeClass('collapse')\u000a        [dimension](size || 'auto')\u000a        [0].offsetWidth\u000a\u000a      this.$element[size !== null ? 'addClass' : 'removeClass']('collapse')\u000a\u000a      return this\u000a    }\u000a\u000a  , transition: function (method, startEvent, completeEvent) {\u000a      var that = this\u000a        , complete = function () {\u000a            if (startEvent.type == 'show') that.reset()\u000a            that.transitioning = 0\u000a            that.$element.trigger(completeEvent)\u000a          }\u000a\u000a      this.$element.trigger(startEvent)\u000a\u000a      if (startEvent.isDefaultPrevented()) return\u000a\u000a      this.transitioning = 1\u000a\u000a      this.$element[method]('in')\u000a\u000a      $.support.transition && this.$element.hasClass('collapse') ?\u000a        this.$element.one($.support.transition.end, complete) :\u000a        complete()\u000a    }\u000a\u000a  , toggle: function () {\u000a      this[this.$element.hasClass('in') ? 'hide' : 'show']()\u000a    }\u000a\u000a  }\u000a\u000a\u000a /* COLLAPSE PLUGIN DEFINITION\u000a  * ========================== */\u000a\u000a  var old = $.fn.collapse\u000a\u000a  $.fn.collapse = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('collapse')\u000a        , options = $.extend({}, $.fn.collapse.defaults, $this.data(), typeof option == 'object' && option)\u000a      if (!data) $this.data('collapse', (data = new Collapse(this, options)))\u000a      if (typeof option == 'string') data[option]()\u000a    })\u000a  }\u000a\u000a  $.fn.collapse.defaults = {\u000a    toggle: true\u000a  }\u000a\u000a  $.fn.collapse.Constructor = Collapse\u000a\u000a\u000a /* COLLAPSE NO CONFLICT\u000a  * ==================== */\u000a\u000a  $.fn.collapse.noConflict = function () {\u000a    $.fn.collapse = old\u000a    return this\u000a  }\u000a\u000a\u000a /* COLLAPSE DATA-API\u000a  * ================= */\u000a\u000a  $(document).on('click.collapse.data-api', '[data-toggle=collapse]', function (e) {\u000a    var $this = $(this), href\u000a      , target = $this.attr('data-target')\u000a        || e.preventDefault()\u000a        || (href = $this.attr('href')) && href.replace(/.*(?=#[^\u005cs]+$)/, '') //strip for ie7\u000a      , option = $(target).data('collapse') ? 'toggle' : $this.data()\u000a    $this[$(target).hasClass('in') ? 'addClass' : 'removeClass']('collapsed')\u000a    $(target).collapse(option)\u000a  })\u000a\u000a}(window.jQuery);/* ============================================================\u000a * bootstrap-dropdown.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#dropdowns\u000a * ============================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ============================================================ */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* DROPDOWN CLASS DEFINITION\u000a  * ========================= */\u000a\u000a  var toggle = '[data-toggle=dropdown]'\u000a    , Dropdown = function (element) {\u000a        var $el = $(element).on('click.dropdown.data-api', this.toggle)\u000a        $('html').on('click.dropdown.data-api', function () {\u000a          $el.parent().removeClass('open')\u000a        })\u000a      }\u000a\u000a  Dropdown.prototype = {\u000a\u000a    constructor: Dropdown\u000a\u000a  , toggle: function (e) {\u000a      var $this = $(this)\u000a        , $parent\u000a        , isActive\u000a\u000a      if ($this.is('.disabled, :disabled')) return\u000a\u000a      $parent = getParent($this)\u000a\u000a      isActive = $parent.hasClass('open')\u000a\u000a      clearMenus()\u000a\u000a      if (!isActive) {\u000a        if ('ontouchstart' in document.documentElement) {\u000a          // if mobile we we use a backdrop because click events don't delegate\u000a\u000a          // PATCH by foosel based on CapnBry's suggestion - see OctoPrint/OctoPrint#2059 for details\u000a          //$('<div class="dropdown-backdrop"/>').insertBefore($(this)).on('click', clearMenus)\u000a          $('<div class="dropdown-backdrop"/>').insertAfter($(this)).on('click', clearMenus)\u000a          // /PATCH\u000a        }\u000a        $parent.toggleClass('open')\u000a      }\u000a\u000a      $this.focus()\u000a\u000a      return false\u000a    }\u000a\u000a  , keydown: function (e) {\u000a      var $this\u000a        , $items\u000a        , $active\u000a        , $parent\u000a        , isActive\u000a        , index\u000a\u000a      if (!/(38|40|27)/.test(e.keyCode)) return\u000a\u000a      $this = $(this)\u000a\u000a      e.preventDefault()\u000a      e.stopPropagation()\u000a\u000a      if ($this.is('.disabled, :disabled')) return\u000a\u000a      $parent = getParent($this)\u000a\u000a      isActive = $parent.hasClass('open')\u000a\u000a      if (!isActive || (isActive && e.keyCode == 27)) {\u000a        if (e.which == 27) $parent.find(toggle).focus()\u000a        return $this.click()\u000a      }\u000a\u000a      $items = $('[role=menu] li:not(.divider):visible a', $parent)\u000a\u000a      if (!$items.length) return\u000a\u000a      index = $items.index($items.filter(':focus'))\u000a\u000a      if (e.keyCode == 38 && index > 0) index--                                        // up\u000a      if (e.keyCode == 40 && index < $items.length - 1) index++                        // down\u000a      if (!~index) index = 0\u000a\u000a      $items\u000a        .eq(index)\u000a        .focus()\u000a    }\u000a\u000a  }\u000a\u000a  function clearMenus() {\u000a    $('.dropdown-backdrop').remove()\u000a    $(toggle).each(function () {\u000a      getParent($(this)).removeClass('open')\u000a    })\u000a  }\u000a\u000a  function getParent($this) {\u000a    var selector = $this.attr('data-target')\u000a      , $parent\u000a\u000a    if (!selector) {\u000a      selector = $this.attr('href')\u000a      selector = selector && /#/.test(selector) && selector.replace(/.*(?=#[^\u005cs]*$)/, '') //strip for ie7\u000a    }\u000a\u000a    $parent = selector && (selector != "#") && $(selector)\u000a\u000a    if (!$parent || !$parent.length) $parent = $this.parent()\u000a\u000a    return $parent\u000a  }\u000a\u000a\u000a  /* DROPDOWN PLUGIN DEFINITION\u000a   * ========================== */\u000a\u000a  var old = $.fn.dropdown\u000a\u000a  $.fn.dropdown = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('dropdown')\u000a      if (!data) $this.data('dropdown', (data = new Dropdown(this)))\u000a      if (typeof option == 'string') data[option].call($this)\u000a    })\u000a  }\u000a\u000a  $.fn.dropdown.Constructor = Dropdown\u000a\u000a\u000a /* DROPDOWN NO CONFLICT\u000a  * ==================== */\u000a\u000a  $.fn.dropdown.noConflict = function () {\u000a    $.fn.dropdown = old\u000a    return this\u000a  }\u000a\u000a\u000a  /* APPLY TO STANDARD DROPDOWN ELEMENTS\u000a   * =================================== */\u000a\u000a  $(document)\u000a    .on('click.dropdown.data-api', clearMenus)\u000a    .on('click.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\u000a    .on('click.dropdown.data-api'  , toggle, Dropdown.prototype.toggle)\u000a    .on('keydown.dropdown.data-api', toggle + ', [role=menu]' , Dropdown.prototype.keydown)\u000a\u000a}(window.jQuery);\u000a/* =========================================================\u000a * bootstrap-modal.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#modals\u000a * =========================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ========================================================= */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* MODAL CLASS DEFINITION\u000a  * ====================== */\u000a\u000a  var Modal = function (element, options) {\u000a    this.options = options\u000a    this.$element = $(element)\u000a      .delegate('[data-dismiss="modal"]', 'click.dismiss.modal', $.proxy(this.hide, this))\u000a    this.options.remote && this.$element.find('.modal-body').load(this.options.remote)\u000a  }\u000a\u000a  Modal.prototype = {\u000a\u000a      constructor: Modal\u000a\u000a    , toggle: function () {\u000a        return this[!this.isShown ? 'show' : 'hide']()\u000a      }\u000a\u000a    , show: function () {\u000a        var that = this\u000a          , e = $.Event('show')\u000a\u000a        this.$element.trigger(e)\u000a\u000a        if (this.isShown || e.isDefaultPrevented()) return\u000a\u000a        this.isShown = true\u000a\u000a        this.escape()\u000a\u000a        this.backdrop(function () {\u000a          var transition = $.support.transition && that.$element.hasClass('fade')\u000a\u000a          if (!that.$element.parent().length) {\u000a            that.$element.appendTo(document.body) //don't move modals dom position\u000a          }\u000a\u000a          that.$element.show()\u000a\u000a          if (transition) {\u000a            that.$element[0].offsetWidth // force reflow\u000a          }\u000a\u000a          that.$element\u000a            .addClass('in')\u000a            .attr('aria-hidden', false)\u000a\u000a          that.enforceFocus()\u000a\u000a          transition ?\u000a            that.$element.one($.support.transition.end, function () { that.$element.focus().trigger('shown') }) :\u000a            that.$element.focus().trigger('shown')\u000a\u000a        })\u000a      }\u000a\u000a    , hide: function (e) {\u000a        e && e.preventDefault()\u000a\u000a        var that = this\u000a\u000a        e = $.Event('hide')\u000a\u000a        this.$element.trigger(e)\u000a\u000a        if (!this.isShown || e.isDefaultPrevented()) return\u000a\u000a        this.isShown = false\u000a\u000a        this.escape()\u000a\u000a        $(document).off('focusin.modal')\u000a\u000a        this.$element\u000a          .removeClass('in')\u000a          .attr('aria-hidden', true)\u000a\u000a        $.support.transition && this.$element.hasClass('fade') ?\u000a          this.hideWithTransition() :\u000a          this.hideModal()\u000a      }\u000a\u000a    , enforceFocus: function () {\u000a        var that = this\u000a        $(document).on('focusin.modal', function (e) {\u000a          if (that.$element[0] !== e.target && !that.$element.has(e.target).length) {\u000a            that.$element.focus()\u000a          }\u000a        })\u000a      }\u000a\u000a    , escape: function () {\u000a        var that = this\u000a        if (this.isShown && this.options.keyboard) {\u000a          this.$element.on('keyup.dismiss.modal', function ( e ) {\u000a            e.which == 27 && that.hide()\u000a          })\u000a        } else if (!this.isShown) {\u000a          this.$element.off('keyup.dismiss.modal')\u000a        }\u000a      }\u000a\u000a    , hideWithTransition: function () {\u000a        var that = this\u000a          , timeout = setTimeout(function () {\u000a              that.$element.off($.support.transition.end)\u000a              that.hideModal()\u000a            }, 500)\u000a\u000a        this.$element.one($.support.transition.end, function () {\u000a          clearTimeout(timeout)\u000a          that.hideModal()\u000a        })\u000a      }\u000a\u000a    , hideModal: function () {\u000a        var that = this\u000a        this.$element.hide()\u000a        this.backdrop(function () {\u000a          that.removeBackdrop()\u000a          that.$element.trigger('hidden')\u000a        })\u000a      }\u000a\u000a    , removeBackdrop: function () {\u000a        this.$backdrop && this.$backdrop.remove()\u000a        this.$backdrop = null\u000a      }\u000a\u000a    , backdrop: function (callback) {\u000a        var that = this\u000a          , animate = this.$element.hasClass('fade') ? 'fade' : ''\u000a\u000a        if (this.isShown && this.options.backdrop) {\u000a          var doAnimate = $.support.transition && animate\u000a\u000a          this.$backdrop = $('<div class="modal-backdrop ' + animate + '" />')\u000a            .appendTo(document.body)\u000a\u000a          this.$backdrop.click(\u000a            this.options.backdrop == 'static' ?\u000a              $.proxy(this.$element[0].focus, this.$element[0])\u000a            : $.proxy(this.hide, this)\u000a          )\u000a\u000a          if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\u000a\u000a          this.$backdrop.addClass('in')\u000a\u000a          if (!callback) return\u000a\u000a          doAnimate ?\u000a            this.$backdrop.one($.support.transition.end, callback) :\u000a            callback()\u000a\u000a        } else if (!this.isShown && this.$backdrop) {\u000a          this.$backdrop.removeClass('in')\u000a\u000a          $.support.transition && this.$element.hasClass('fade')?\u000a            this.$backdrop.one($.support.transition.end, callback) :\u000a            callback()\u000a\u000a        } else if (callback) {\u000a          callback()\u000a        }\u000a      }\u000a  }\u000a\u000a\u000a /* MODAL PLUGIN DEFINITION\u000a  * ======================= */\u000a\u000a  var old = $.fn.modal\u000a\u000a  $.fn.modal = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('modal')\u000a        , options = $.extend({}, $.fn.modal.defaults, $this.data(), typeof option == 'object' && option)\u000a      if (!data) $this.data('modal', (data = new Modal(this, options)))\u000a      if (typeof option == 'string') data[option]()\u000a      else if (options.show) data.show()\u000a    })\u000a  }\u000a\u000a  $.fn.modal.defaults = {\u000a      backdrop: true\u000a    , keyboard: true\u000a    , show: true\u000a  }\u000a\u000a  $.fn.modal.Constructor = Modal\u000a\u000a\u000a /* MODAL NO CONFLICT\u000a  * ================= */\u000a\u000a  $.fn.modal.noConflict = function () {\u000a    $.fn.modal = old\u000a    return this\u000a  }\u000a\u000a\u000a /* MODAL DATA-API\u000a  * ============== */\u000a\u000a  $(document).on('click.modal.data-api', '[data-toggle="modal"]', function (e) {\u000a    var $this = $(this)\u000a      , href = $this.attr('href')\u000a      , $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\u005cs]+$)/, ''))) //strip for ie7\u000a      , option = $target.data('modal') ? 'toggle' : $.extend({ remote:!/#/.test(href) && href }, $target.data(), $this.data())\u000a\u000a    e.preventDefault()\u000a\u000a    $target\u000a      .modal(option)\u000a      .one('hide', function () {\u000a        $this.focus()\u000a      })\u000a  })\u000a\u000a}(window.jQuery);\u000a/* ===========================================================\u000a * bootstrap-tooltip.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#tooltips\u000a * Inspired by the original jQuery.tipsy by Jason Frame\u000a * ===========================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ========================================================== */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* TOOLTIP PUBLIC CLASS DEFINITION\u000a  * =============================== */\u000a\u000a  var Tooltip = function (element, options) {\u000a    this.init('tooltip', element, options)\u000a  }\u000a\u000a  Tooltip.prototype = {\u000a\u000a    constructor: Tooltip\u000a\u000a  , init: function (type, element, options) {\u000a      var eventIn\u000a        , eventOut\u000a        , triggers\u000a        , trigger\u000a        , i\u000a\u000a      this.type = type\u000a      this.$element = $(element)\u000a      this.options = this.getOptions(options)\u000a      this.enabled = true\u000a\u000a      triggers = this.options.trigger.split(' ')\u000a\u000a      for (i = triggers.length; i--;) {\u000a        trigger = triggers[i]\u000a        if (trigger == 'click') {\u000a          this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\u000a        } else if (trigger != 'manual') {\u000a          eventIn = trigger == 'hover' ? 'mouseenter' : 'focus'\u000a          eventOut = trigger == 'hover' ? 'mouseleave' : 'blur'\u000a          this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\u000a          this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\u000a        }\u000a      }\u000a\u000a      this.options.selector ?\u000a        (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\u000a        this.fixTitle()\u000a    }\u000a\u000a  , getOptions: function (options) {\u000a      options = $.extend({}, $.fn[this.type].defaults, this.$element.data(), options)\u000a\u000a      if (options.delay && typeof options.delay == 'number') {\u000a        options.delay = {\u000a          show: options.delay\u000a        , hide: options.delay\u000a        }\u000a      }\u000a\u000a      return options\u000a    }\u000a\u000a  , enter: function (e) {\u000a      var defaults = $.fn[this.type].defaults\u000a        , options = {}\u000a        , self\u000a\u000a      this._options && $.each(this._options, function (key, value) {\u000a        if (defaults[key] != value) options[key] = value\u000a      }, this)\u000a\u000a      self = $(e.currentTarget)[this.type](options).data(this.type)\u000a\u000a      if (!self.options.delay || !self.options.delay.show) return self.show()\u000a\u000a      clearTimeout(this.timeout)\u000a      self.hoverState = 'in'\u000a      this.timeout = setTimeout(function() {\u000a        if (self.hoverState == 'in') self.show()\u000a      }, self.options.delay.show)\u000a    }\u000a\u000a  , leave: function (e) {\u000a      var self = $(e.currentTarget)[this.type](this._options).data(this.type)\u000a\u000a      if (this.timeout) clearTimeout(this.timeout)\u000a      if (!self.options.delay || !self.options.delay.hide) return self.hide()\u000a\u000a      self.hoverState = 'out'\u000a      this.timeout = setTimeout(function() {\u000a        if (self.hoverState == 'out') self.hide()\u000a      }, self.options.delay.hide)\u000a    }\u000a\u000a  , show: function () {\u000a      var $tip\u000a        , pos\u000a        , actualWidth\u000a        , actualHeight\u000a        , placement\u000a        , tp\u000a        , e = $.Event('show')\u000a\u000a      if (this.hasContent() && this.enabled) {\u000a        this.$element.trigger(e)\u000a        if (e.isDefaultPrevented()) return\u000a        $tip = this.tip()\u000a        this.setContent()\u000a\u000a        if (this.options.animation) {\u000a          $tip.addClass('fade')\u000a        }\u000a\u000a        placement = typeof this.options.placement == 'function' ?\u000a          this.options.placement.call(this, $tip[0], this.$element[0]) :\u000a          this.options.placement\u000a\u000a        $tip\u000a          .detach()\u000a          .css({ top: 0, left: 0, display: 'block' })\u000a\u000a        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\u000a\u000a        pos = this.getPosition()\u000a\u000a        actualWidth = $tip[0].offsetWidth\u000a        actualHeight = $tip[0].offsetHeight\u000a\u000a        switch (placement) {\u000a          case 'bottom':\u000a            tp = {top: pos.top + pos.height, left: pos.left + pos.width / 2 - actualWidth / 2}\u000a            break\u000a          case 'top':\u000a            tp = {top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2}\u000a            break\u000a          case 'left':\u000a            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth}\u000a            break\u000a          case 'right':\u000a            tp = {top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width}\u000a            break\u000a        }\u000a\u000a        this.applyPlacement(tp, placement)\u000a        this.$element.trigger('shown')\u000a      }\u000a    }\u000a\u000a  , applyPlacement: function(offset, placement){\u000a      var $tip = this.tip()\u000a        , width = $tip[0].offsetWidth\u000a        , height = $tip[0].offsetHeight\u000a        , actualWidth\u000a        , actualHeight\u000a        , delta\u000a        , replace\u000a\u000a      $tip\u000a        .offset(offset)\u000a        .addClass(placement)\u000a        .addClass('in')\u000a\u000a      actualWidth = $tip[0].offsetWidth\u000a      actualHeight = $tip[0].offsetHeight\u000a\u000a      if (placement == 'top' && actualHeight != height) {\u000a        offset.top = offset.top + height - actualHeight\u000a        replace = true\u000a      }\u000a\u000a      if (placement == 'bottom' || placement == 'top') {\u000a        delta = 0\u000a\u000a        if (offset.left < 0){\u000a          delta = offset.left * -2\u000a          offset.left = 0\u000a          $tip.offset(offset)\u000a          actualWidth = $tip[0].offsetWidth\u000a          actualHeight = $tip[0].offsetHeight\u000a        }\u000a\u000a        this.replaceArrow(delta - width + actualWidth, actualWidth, 'left')\u000a      } else {\u000a        this.replaceArrow(actualHeight - height, actualHeight, 'top')\u000a      }\u000a\u000a      if (replace) $tip.offset(offset)\u000a    }\u000a\u000a  , replaceArrow: function(delta, dimension, position){\u000a      this\u000a        .arrow()\u000a        .css(position, delta ? (50 * (1 - delta / dimension) + "%") : '')\u000a    }\u000a\u000a  , setContent: function () {\u000a      var $tip = this.tip()\u000a        , title = this.getTitle()\u000a\u000a      $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\u000a      $tip.removeClass('fade in top bottom left right')\u000a    }\u000a\u000a  , hide: function () {\u000a      var that = this\u000a        , $tip = this.tip()\u000a        , e = $.Event('hide')\u000a\u000a      this.$element.trigger(e)\u000a      if (e.isDefaultPrevented()) return\u000a\u000a      $tip.removeClass('in')\u000a\u000a      function removeWithAnimation() {\u000a        var timeout = setTimeout(function () {\u000a          $tip.off($.support.transition.end).detach()\u000a        }, 500)\u000a\u000a        $tip.one($.support.transition.end, function () {\u000a          clearTimeout(timeout)\u000a          $tip.detach()\u000a        })\u000a      }\u000a\u000a      $.support.transition && this.$tip.hasClass('fade') ?\u000a        removeWithAnimation() :\u000a        $tip.detach()\u000a\u000a      this.$element.trigger('hidden')\u000a\u000a      return this\u000a    }\u000a\u000a  , fixTitle: function () {\u000a      var $e = this.$element\u000a      if ($e.attr('title') || typeof($e.attr('data-original-title')) != 'string') {\u000a        $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\u000a      }\u000a    }\u000a\u000a  , hasContent: function () {\u000a      return this.getTitle()\u000a    }\u000a\u000a  , getPosition: function () {\u000a      var el = this.$element[0]\u000a      return $.extend({}, (typeof el.getBoundingClientRect == 'function') ? el.getBoundingClientRect() : {\u000a        width: el.offsetWidth\u000a      , height: el.offsetHeight\u000a      }, this.$element.offset())\u000a    }\u000a\u000a  , getTitle: function () {\u000a      var title\u000a        , $e = this.$element\u000a        , o = this.options\u000a\u000a      title = $e.attr('data-original-title')\u000a        || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\u000a\u000a      return title\u000a    }\u000a\u000a  , tip: function () {\u000a      return this.$tip = this.$tip || $(this.options.template)\u000a    }\u000a\u000a  , arrow: function(){\u000a      return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow")\u000a    }\u000a\u000a  , validate: function () {\u000a      if (!this.$element[0].parentNode) {\u000a        this.hide()\u000a        this.$element = null\u000a        this.options = null\u000a      }\u000a    }\u000a\u000a  , enable: function () {\u000a      this.enabled = true\u000a    }\u000a\u000a  , disable: function () {\u000a      this.enabled = false\u000a    }\u000a\u000a  , toggleEnabled: function () {\u000a      this.enabled = !this.enabled\u000a    }\u000a\u000a  , toggle: function (e) {\u000a      var self = e ? $(e.currentTarget)[this.type](this._options).data(this.type) : this\u000a      self.tip().hasClass('in') ? self.hide() : self.show()\u000a    }\u000a\u000a  , destroy: function () {\u000a      this.hide().$element.off('.' + this.type).removeData(this.type)\u000a    }\u000a\u000a  }\u000a\u000a\u000a /* TOOLTIP PLUGIN DEFINITION\u000a  * ========================= */\u000a\u000a  var old = $.fn.tooltip\u000a\u000a  $.fn.tooltip = function ( option ) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('tooltip')\u000a        , options = typeof option == 'object' && option\u000a      if (!data) $this.data('tooltip', (data = new Tooltip(this, options)))\u000a      if (typeof option == 'string') data[option]()\u000a    })\u000a  }\u000a\u000a  $.fn.tooltip.Constructor = Tooltip\u000a\u000a  $.fn.tooltip.defaults = {\u000a    animation: true\u000a  , placement: 'top'\u000a  , selector: false\u000a  , template: '<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'\u000a  , trigger: 'hover focus'\u000a  , title: ''\u000a  , delay: 0\u000a  , html: false\u000a  , container: false\u000a  }\u000a\u000a\u000a /* TOOLTIP NO CONFLICT\u000a  * =================== */\u000a\u000a  $.fn.tooltip.noConflict = function () {\u000a    $.fn.tooltip = old\u000a    return this\u000a  }\u000a\u000a}(window.jQuery);\u000a/* ===========================================================\u000a * bootstrap-popover.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#popovers\u000a * ===========================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * =========================================================== */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* POPOVER PUBLIC CLASS DEFINITION\u000a  * =============================== */\u000a\u000a  var Popover = function (element, options) {\u000a    this.init('popover', element, options)\u000a  }\u000a\u000a\u000a  /* NOTE: POPOVER EXTENDS BOOTSTRAP-TOOLTIP.js\u000a     ========================================== */\u000a\u000a  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype, {\u000a\u000a    constructor: Popover\u000a\u000a  , setContent: function () {\u000a      var $tip = this.tip()\u000a        , title = this.getTitle()\u000a        , content = this.getContent()\u000a\u000a      $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\u000a      $tip.find('.popover-content')[this.options.html ? 'html' : 'text'](content)\u000a\u000a      $tip.removeClass('fade top bottom left right in')\u000a    }\u000a\u000a  , hasContent: function () {\u000a      return this.getTitle() || this.getContent()\u000a    }\u000a\u000a  , getContent: function () {\u000a      var content\u000a        , $e = this.$element\u000a        , o = this.options\u000a\u000a      content = (typeof o.content == 'function' ? o.content.call($e[0]) :  o.content)\u000a        || $e.attr('data-content')\u000a\u000a      return content\u000a    }\u000a\u000a  , tip: function () {\u000a      if (!this.$tip) {\u000a        this.$tip = $(this.options.template)\u000a      }\u000a      return this.$tip\u000a    }\u000a\u000a  , destroy: function () {\u000a      this.hide().$element.off('.' + this.type).removeData(this.type)\u000a    }\u000a\u000a  })\u000a\u000a\u000a /* POPOVER PLUGIN DEFINITION\u000a  * ======================= */\u000a\u000a  var old = $.fn.popover\u000a\u000a  $.fn.popover = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('popover')\u000a        , options = typeof option == 'object' && option\u000a      if (!data) $this.data('popover', (data = new Popover(this, options)))\u000a      if (typeof option == 'string') data[option]()\u000a    })\u000a  }\u000a\u000a  $.fn.popover.Constructor = Popover\u000a\u000a  $.fn.popover.defaults = $.extend({} , $.fn.tooltip.defaults, {\u000a    placement: 'right'\u000a  , trigger: 'click'\u000a  , content: ''\u000a  , template: '<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'\u000a  })\u000a\u000a\u000a /* POPOVER NO CONFLICT\u000a  * =================== */\u000a\u000a  $.fn.popover.noConflict = function () {\u000a    $.fn.popover = old\u000a    return this\u000a  }\u000a\u000a}(window.jQuery);\u000a/* =============================================================\u000a * bootstrap-scrollspy.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#scrollspy\u000a * =============================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ============================================================== */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* SCROLLSPY CLASS DEFINITION\u000a  * ========================== */\u000a\u000a  function ScrollSpy(element, options) {\u000a    var process = $.proxy(this.process, this)\u000a      , $element = $(element).is('body') ? $(window) : $(element)\u000a      , href\u000a    this.options = $.extend({}, $.fn.scrollspy.defaults, options)\u000a    this.$scrollElement = $element.on('scroll.scroll-spy.data-api', process)\u000a    this.selector = (this.options.target\u000a      || ((href = $(element).attr('href')) && href.replace(/.*(?=#[^\u005cs]+$)/, '')) //strip for ie7\u000a      || '') + ' .nav li > a'\u000a    this.$body = $('body')\u000a    this.refresh()\u000a    this.process()\u000a  }\u000a\u000a  ScrollSpy.prototype = {\u000a\u000a      constructor: ScrollSpy\u000a\u000a    , refresh: function () {\u000a        var self = this\u000a          , $targets\u000a\u000a        this.offsets = $([])\u000a        this.targets = $([])\u000a\u000a        $targets = this.$body\u000a          .find(this.selector)\u000a          .map(function () {\u000a            var $el = $(this)\u000a              , href = $el.data('target') || $el.attr('href')\u000a              , $href = /^#\u005cw/.test(href) && $(href)\u000a            return ( $href\u000a              && $href.length\u000a              && [[ $href.position().top + (!$.isWindow(self.$scrollElement.get(0)) && self.$scrollElement.scrollTop()), href ]] ) || null\u000a          })\u000a          .sort(function (a, b) { return a[0] - b[0] })\u000a          .each(function () {\u000a            self.offsets.push(this[0])\u000a            self.targets.push(this[1])\u000a          })\u000a      }\u000a\u000a    , process: function () {\u000a        var scrollTop = this.$scrollElement.scrollTop() + this.options.offset\u000a          , scrollHeight = this.$scrollElement[0].scrollHeight || this.$body[0].scrollHeight\u000a          , maxScroll = scrollHeight - this.$scrollElement.height()\u000a          , offsets = this.offsets\u000a          , targets = this.targets\u000a          , activeTarget = this.activeTarget\u000a          , i\u000a\u000a        if (scrollTop >= maxScroll) {\u000a          return activeTarget != (i = targets.last()[0])\u000a            && this.activate ( i )\u000a        }\u000a\u000a        for (i = offsets.length; i--;) {\u000a          activeTarget != targets[i]\u000a            && scrollTop >= offsets[i]\u000a            && (!offsets[i + 1] || scrollTop <= offsets[i + 1])\u000a            && this.activate( targets[i] )\u000a        }\u000a      }\u000a\u000a    , activate: function (target) {\u000a        var active\u000a          , selector\u000a\u000a        this.activeTarget = target\u000a\u000a        $(this.selector)\u000a          .parent('.active')\u000a          .removeClass('active')\u000a\u000a        selector = this.selector\u000a          + '[data-target="' + target + '"],'\u000a          + this.selector + '[href="' + target + '"]'\u000a\u000a        active = $(selector)\u000a          .parent('li')\u000a          .addClass('active')\u000a\u000a        if (active.parent('.dropdown-menu').length)  {\u000a          active = active.closest('li.dropdown').addClass('active')\u000a        }\u000a\u000a        active.trigger('activate')\u000a      }\u000a\u000a  }\u000a\u000a\u000a /* SCROLLSPY PLUGIN DEFINITION\u000a  * =========================== */\u000a\u000a  var old = $.fn.scrollspy\u000a\u000a  $.fn.scrollspy = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('scrollspy')\u000a        , options = typeof option == 'object' && option\u000a      if (!data) $this.data('scrollspy', (data = new ScrollSpy(this, options)))\u000a      if (typeof option == 'string') data[option]()\u000a    })\u000a  }\u000a\u000a  $.fn.scrollspy.Constructor = ScrollSpy\u000a\u000a  $.fn.scrollspy.defaults = {\u000a    offset: 10\u000a  }\u000a\u000a\u000a /* SCROLLSPY NO CONFLICT\u000a  * ===================== */\u000a\u000a  $.fn.scrollspy.noConflict = function () {\u000a    $.fn.scrollspy = old\u000a    return this\u000a  }\u000a\u000a\u000a /* SCROLLSPY DATA-API\u000a  * ================== */\u000a\u000a  $(window).on('load', function () {\u000a    $('[data-spy="scroll"]').each(function () {\u000a      var $spy = $(this)\u000a      $spy.scrollspy($spy.data())\u000a    })\u000a  })\u000a\u000a}(window.jQuery);/* ========================================================\u000a * bootstrap-tab.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#tabs\u000a * ========================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ======================================================== */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* TAB CLASS DEFINITION\u000a  * ==================== */\u000a\u000a  var Tab = function (element) {\u000a    this.element = $(element)\u000a  }\u000a\u000a  Tab.prototype = {\u000a\u000a    constructor: Tab\u000a\u000a  , show: function () {\u000a      var $this = this.element\u000a        , $ul = $this.closest('ul:not(.dropdown-menu)')\u000a        , selector = $this.attr('data-target')\u000a        , previous\u000a        , $target\u000a        , e\u000a\u000a      if (!selector) {\u000a        selector = $this.attr('href')\u000a        selector = selector && selector.replace(/.*(?=#[^\u005cs]*$)/, '') //strip for ie7\u000a      }\u000a\u000a      if ( $this.parent('li').hasClass('active') ) return\u000a\u000a      previous = $ul.find('.active:last a')[0]\u000a\u000a      e = $.Event('show', {\u000a        relatedTarget: previous\u000a      })\u000a\u000a      $this.trigger(e)\u000a\u000a      if (e.isDefaultPrevented()) return\u000a\u000a      $target = $(selector)\u000a\u000a      this.activate($this.parent('li'), $ul)\u000a      this.activate($target, $target.parent(), function () {\u000a        $this.trigger({\u000a          type: 'shown'\u000a        , relatedTarget: previous\u000a        })\u000a      })\u000a    }\u000a\u000a  , activate: function ( element, container, callback) {\u000a      var $active = container.find('> .active')\u000a        , transition = callback\u000a            && $.support.transition\u000a            && $active.hasClass('fade')\u000a\u000a      function next() {\u000a        $active\u000a          .removeClass('active')\u000a          .find('> .dropdown-menu > .active')\u000a          .removeClass('active')\u000a\u000a        element.addClass('active')\u000a\u000a        if (transition) {\u000a          element[0].offsetWidth // reflow for transition\u000a          element.addClass('in')\u000a        } else {\u000a          element.removeClass('fade')\u000a        }\u000a\u000a        if ( element.parent('.dropdown-menu') ) {\u000a          element.closest('li.dropdown').addClass('active')\u000a        }\u000a\u000a        callback && callback()\u000a      }\u000a\u000a      transition ?\u000a        $active.one($.support.transition.end, next) :\u000a        next()\u000a\u000a      $active.removeClass('in')\u000a    }\u000a  }\u000a\u000a\u000a /* TAB PLUGIN DEFINITION\u000a  * ===================== */\u000a\u000a  var old = $.fn.tab\u000a\u000a  $.fn.tab = function ( option ) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('tab')\u000a      if (!data) $this.data('tab', (data = new Tab(this)))\u000a      if (typeof option == 'string') data[option]()\u000a    })\u000a  }\u000a\u000a  $.fn.tab.Constructor = Tab\u000a\u000a\u000a /* TAB NO CONFLICT\u000a  * =============== */\u000a\u000a  $.fn.tab.noConflict = function () {\u000a    $.fn.tab = old\u000a    return this\u000a  }\u000a\u000a\u000a /* TAB DATA-API\u000a  * ============ */\u000a\u000a  $(document).on('click.tab.data-api', '[data-toggle="tab"], [data-toggle="pill"]', function (e) {\u000a    e.preventDefault()\u000a    $(this).tab('show')\u000a  })\u000a\u000a}(window.jQuery);/* =============================================================\u000a * bootstrap-typeahead.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#typeahead\u000a * =============================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ============================================================ */\u000a\u000a\u000a!function($){\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* TYPEAHEAD PUBLIC CLASS DEFINITION\u000a  * ================================= */\u000a\u000a  var Typeahead = function (element, options) {\u000a    this.$element = $(element)\u000a    this.options = $.extend({}, $.fn.typeahead.defaults, options)\u000a    this.matcher = this.options.matcher || this.matcher\u000a    this.sorter = this.options.sorter || this.sorter\u000a    this.highlighter = this.options.highlighter || this.highlighter\u000a    this.updater = this.options.updater || this.updater\u000a    this.source = this.options.source\u000a    this.$menu = $(this.options.menu)\u000a    this.shown = false\u000a    this.listen()\u000a  }\u000a\u000a  Typeahead.prototype = {\u000a\u000a    constructor: Typeahead\u000a\u000a  , select: function () {\u000a      var val = this.$menu.find('.active').attr('data-value')\u000a      this.$element\u000a        .val(this.updater(val))\u000a        .change()\u000a      return this.hide()\u000a    }\u000a\u000a  , updater: function (item) {\u000a      return item\u000a    }\u000a\u000a  , show: function () {\u000a      var pos = $.extend({}, this.$element.position(), {\u000a        height: this.$element[0].offsetHeight\u000a      })\u000a\u000a      this.$menu\u000a        .insertAfter(this.$element)\u000a        .css({\u000a          top: pos.top + pos.height\u000a        , left: pos.left\u000a        })\u000a        .show()\u000a\u000a      this.shown = true\u000a      return this\u000a    }\u000a\u000a  , hide: function () {\u000a      this.$menu.hide()\u000a      this.shown = false\u000a      return this\u000a    }\u000a\u000a  , lookup: function (event) {\u000a      var items\u000a\u000a      this.query = this.$element.val()\u000a\u000a      if (!this.query || this.query.length < this.options.minLength) {\u000a        return this.shown ? this.hide() : this\u000a      }\u000a\u000a      items = $.isFunction(this.source) ? this.source(this.query, $.proxy(this.process, this)) : this.source\u000a\u000a      return items ? this.process(items) : this\u000a    }\u000a\u000a  , process: function (items) {\u000a      var that = this\u000a\u000a      items = $.grep(items, function (item) {\u000a        return that.matcher(item)\u000a      })\u000a\u000a      items = this.sorter(items)\u000a\u000a      if (!items.length) {\u000a        return this.shown ? this.hide() : this\u000a      }\u000a\u000a      return this.render(items.slice(0, this.options.items)).show()\u000a    }\u000a\u000a  , matcher: function (item) {\u000a      return ~item.toLowerCase().indexOf(this.query.toLowerCase())\u000a    }\u000a\u000a  , sorter: function (items) {\u000a      var beginswith = []\u000a        , caseSensitive = []\u000a        , caseInsensitive = []\u000a        , item\u000a\u000a      while (item = items.shift()) {\u000a        if (!item.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(item)\u000a        else if (~item.indexOf(this.query)) caseSensitive.push(item)\u000a        else caseInsensitive.push(item)\u000a      }\u000a\u000a      return beginswith.concat(caseSensitive, caseInsensitive)\u000a    }\u000a\u000a  , highlighter: function (item) {\u000a      var query = this.query.replace(/[\u005c-\u005c[\u005c]{}()*+?.,\u005c\u005c\u005c^$|#\u005cs]/g, '\u005c\u005c$&')\u000a      return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {\u000a        return '<strong>' + match + '</strong>'\u000a      })\u000a    }\u000a\u000a  , render: function (items) {\u000a      var that = this\u000a\u000a      items = $(items).map(function (i, item) {\u000a        i = $(that.options.item).attr('data-value', item)\u000a        i.find('a').html(that.highlighter(item))\u000a        return i[0]\u000a      })\u000a\u000a      items.first().addClass('active')\u000a      this.$menu.html(items)\u000a      return this\u000a    }\u000a\u000a  , next: function (event) {\u000a      var active = this.$menu.find('.active').removeClass('active')\u000a        , next = active.next()\u000a\u000a      if (!next.length) {\u000a        next = $(this.$menu.find('li')[0])\u000a      }\u000a\u000a      next.addClass('active')\u000a    }\u000a\u000a  , prev: function (event) {\u000a      var active = this.$menu.find('.active').removeClass('active')\u000a        , prev = active.prev()\u000a\u000a      if (!prev.length) {\u000a        prev = this.$menu.find('li').last()\u000a      }\u000a\u000a      prev.addClass('active')\u000a    }\u000a\u000a  , listen: function () {\u000a      this.$element\u000a        .on('focus',    $.proxy(this.focus, this))\u000a        .on('blur',     $.proxy(this.blur, this))\u000a        .on('keypress', $.proxy(this.keypress, this))\u000a        .on('keyup',    $.proxy(this.keyup, this))\u000a\u000a      if (this.eventSupported('keydown')) {\u000a        this.$element.on('keydown', $.proxy(this.keydown, this))\u000a      }\u000a\u000a      this.$menu\u000a        .on('click', $.proxy(this.click, this))\u000a        .on('mouseenter', 'li', $.proxy(this.mouseenter, this))\u000a        .on('mouseleave', 'li', $.proxy(this.mouseleave, this))\u000a    }\u000a\u000a  , eventSupported: function(eventName) {\u000a      var isSupported = eventName in this.$element\u000a      if (!isSupported) {\u000a        this.$element.setAttribute(eventName, 'return;')\u000a        isSupported = typeof this.$element[eventName] === 'function'\u000a      }\u000a      return isSupported\u000a    }\u000a\u000a  , move: function (e) {\u000a      if (!this.shown) return\u000a\u000a      switch(e.keyCode) {\u000a        case 9: // tab\u000a        case 13: // enter\u000a        case 27: // escape\u000a          e.preventDefault()\u000a          break\u000a\u000a        case 38: // up arrow\u000a          e.preventDefault()\u000a          this.prev()\u000a          break\u000a\u000a        case 40: // down arrow\u000a          e.preventDefault()\u000a          this.next()\u000a          break\u000a      }\u000a\u000a      e.stopPropagation()\u000a    }\u000a\u000a  , keydown: function (e) {\u000a      this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40,38,9,13,27])\u000a      this.move(e)\u000a    }\u000a\u000a  , keypress: function (e) {\u000a      if (this.suppressKeyPressRepeat) return\u000a      this.move(e)\u000a    }\u000a\u000a  , keyup: function (e) {\u000a      switch(e.keyCode) {\u000a        case 40: // down arrow\u000a        case 38: // up arrow\u000a        case 16: // shift\u000a        case 17: // ctrl\u000a        case 18: // alt\u000a          break\u000a\u000a        case 9: // tab\u000a        case 13: // enter\u000a          if (!this.shown) return\u000a          this.select()\u000a          break\u000a\u000a        case 27: // escape\u000a          if (!this.shown) return\u000a          this.hide()\u000a          break\u000a\u000a        default:\u000a          this.lookup()\u000a      }\u000a\u000a      e.stopPropagation()\u000a      e.preventDefault()\u000a  }\u000a\u000a  , focus: function (e) {\u000a      this.focused = true\u000a    }\u000a\u000a  , blur: function (e) {\u000a      this.focused = false\u000a      if (!this.mousedover && this.shown) this.hide()\u000a    }\u000a\u000a  , click: function (e) {\u000a      e.stopPropagation()\u000a      e.preventDefault()\u000a      this.select()\u000a      this.$element.focus()\u000a    }\u000a\u000a  , mouseenter: function (e) {\u000a      this.mousedover = true\u000a      this.$menu.find('.active').removeClass('active')\u000a      $(e.currentTarget).addClass('active')\u000a    }\u000a\u000a  , mouseleave: function (e) {\u000a      this.mousedover = false\u000a      if (!this.focused && this.shown) this.hide()\u000a    }\u000a\u000a  }\u000a\u000a\u000a  /* TYPEAHEAD PLUGIN DEFINITION\u000a   * =========================== */\u000a\u000a  var old = $.fn.typeahead\u000a\u000a  $.fn.typeahead = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('typeahead')\u000a        , options = typeof option == 'object' && option\u000a      if (!data) $this.data('typeahead', (data = new Typeahead(this, options)))\u000a      if (typeof option == 'string') data[option]()\u000a    })\u000a  }\u000a\u000a  $.fn.typeahead.defaults = {\u000a    source: []\u000a  , items: 8\u000a  , menu: '<ul class="typeahead dropdown-menu"></ul>'\u000a  , item: '<li><a href="#"></a></li>'\u000a  , minLength: 1\u000a  }\u000a\u000a  $.fn.typeahead.Constructor = Typeahead\u000a\u000a\u000a /* TYPEAHEAD NO CONFLICT\u000a  * =================== */\u000a\u000a  $.fn.typeahead.noConflict = function () {\u000a    $.fn.typeahead = old\u000a    return this\u000a  }\u000a\u000a\u000a /* TYPEAHEAD DATA-API\u000a  * ================== */\u000a\u000a  $(document).on('focus.typeahead.data-api', '[data-provide="typeahead"]', function (e) {\u000a    var $this = $(this)\u000a    if ($this.data('typeahead')) return\u000a    $this.typeahead($this.data())\u000a  })\u000a\u000a}(window.jQuery);\u000a/* ==========================================================\u000a * bootstrap-affix.js v2.3.2\u000a * http://getbootstrap.com/2.3.2/javascript.html#affix\u000a * ==========================================================\u000a * Copyright 2013 Twitter, Inc.\u000a *\u000a * Licensed under the Apache License, Version 2.0 (the "License");\u000a * you may not use this file except in compliance with the License.\u000a * You may obtain a copy of the License at\u000a *\u000a * http://www.apache.org/licenses/LICENSE-2.0\u000a *\u000a * Unless required by applicable law or agreed to in writing, software\u000a * distributed under the License is distributed on an "AS IS" BASIS,\u000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\u000a * See the License for the specific language governing permissions and\u000a * limitations under the License.\u000a * ========================================================== */\u000a\u000a\u000a!function ($) {\u000a\u000a  "use strict"; // jshint ;_;\u000a\u000a\u000a /* AFFIX CLASS DEFINITION\u000a  * ====================== */\u000a\u000a  var Affix = function (element, options) {\u000a    this.options = $.extend({}, $.fn.affix.defaults, options)\u000a    this.$window = $(window)\u000a      .on('scroll.affix.data-api', $.proxy(this.checkPosition, this))\u000a      .on('click.affix.data-api',  $.proxy(function () { setTimeout($.proxy(this.checkPosition, this), 1) }, this))\u000a    this.$element = $(element)\u000a    this.checkPosition()\u000a  }\u000a\u000a  Affix.prototype.checkPosition = function () {\u000a    if (!this.$element.is(':visible')) return\u000a\u000a    var scrollHeight = $(document).height()\u000a      , scrollTop = this.$window.scrollTop()\u000a      , position = this.$element.offset()\u000a      , offset = this.options.offset\u000a      , offsetBottom = offset.bottom\u000a      , offsetTop = offset.top\u000a      , reset = 'affix affix-top affix-bottom'\u000a      , affix\u000a\u000a    if (typeof offset != 'object') offsetBottom = offsetTop = offset\u000a    if (typeof offsetTop == 'function') offsetTop = offset.top()\u000a    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom()\u000a\u000a    affix = this.unpin != null && (scrollTop + this.unpin <= position.top) ?\u000a      false    : offsetBottom != null && (position.top + this.$element.height() >= scrollHeight - offsetBottom) ?\u000a      'bottom' : offsetTop != null && scrollTop <= offsetTop ?\u000a      'top'    : false\u000a\u000a    if (this.affixed === affix) return\u000a\u000a    this.affixed = affix\u000a    this.unpin = affix == 'bottom' ? position.top - scrollTop : null\u000a\u000a    this.$element.removeClass(reset).addClass('affix' + (affix ? '-' + affix : ''))\u000a  }\u000a\u000a\u000a /* AFFIX PLUGIN DEFINITION\u000a  * ======================= */\u000a\u000a  var old = $.fn.affix\u000a\u000a  $.fn.affix = function (option) {\u000a    return this.each(function () {\u000a      var $this = $(this)\u000a        , data = $this.data('affix')\u000a        , options = typeof option == 'object' && option\u000a      if (!data) $this.data('affix', (data = new Affix(this, options)))\u000a      if (typeof option == 'string') data[option]()\u000a    })\u000a  }\u000a\u000a  $.fn.affix.Constructor = Affix\u000a\u000a  $.fn.affix.defaults = {\u000a    offset: 0\u000a  }\u000a\u000a\u000a /* AFFIX NO CONFLICT\u000a  * ================= */\u000a\u000a  $.fn.affix.noConflict = function () {\u000a    $.fn.affix = old\u000a    return this\u000a  }\u000a\u000a\u000a /* AFFIX DATA-API\u000a  * ============== */\u000a\u000a  $(window).on('load', function () {\u000a    $('[data-spy="affix"]').each(function () {\u000a      var $spy = $(this)\u000a        , data = $spy.data()\u000a\u000a      data.offset = data.offset || {}\u000a\u000a      data.offsetBottom && (data.offset.bottom = data.offsetBottom)\u000a      data.offsetTop && (data.offset.top = data.offsetTop)\u000a\u000a      $spy.affix(data)\u000a    })\u000a  })\u000a\u000a\u000a}(window.jQuery);\u000a\u000a;\u000a
p0
.