V// source: js/app/client/files.js\u000a(function (global, factory) {\u000a    if (typeof define === "function" && define.amd) {\u000a        define(["OctoPrintClient", "jquery", "lodash"], factory);\u000a    } else {\u000a        factory(global.OctoPrintClient, global.$, global._);\u000a    }\u000a})(this, function (OctoPrintClient, $, _) {\u000a    var url = "api/files";\u000a    var downloadUrl = "downloads/files";\u000a\u000a    var OctoPrintFilesClient = function (base) {\u000a        this.base = base;\u000a    };\u000a\u000a    var resourceForLocation = function (location) {\u000a        return url + "/" + location;\u000a    };\u000a\u000a    var downloadForLocation = function (location) {\u000a        return downloadUrl + "/" + location;\u000a    };\u000a\u000a    var downloadForEntry = function (location, filename) {\u000a        return downloadForLocation(location) + "/" + filename;\u000a    };\u000a\u000a    var resourceForEntry = function (location, filename) {\u000a        return resourceForLocation(location) + "/" + filename;\u000a    };\u000a\u000a    var preProcessList = function (response) {\u000a        var recursiveCheck = function (element, index, list) {\u000a            if (!element.hasOwnProperty("parent"))\u000a                element.parent = {children: list, parent: undefined};\u000a            if (!element.hasOwnProperty("size")) element.size = undefined;\u000a            if (!element.hasOwnProperty("date")) element.date = undefined;\u000a\u000a            if (element.type == "folder") {\u000a                element.weight = 0;\u000a                _.each(element.children, function (e, i, l) {\u000a                    e.parent = element;\u000a                    recursiveCheck(e, i, l);\u000a                    element.weight += e.weight;\u000a                });\u000a            } else {\u000a                element.weight = 1;\u000a            }\u000a        };\u000a        _.each(response.files, recursiveCheck);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.get = function (location, entryname, opts) {\u000a        return this.base.get(resourceForEntry(location, entryname), opts);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.list = function (recursively, force, opts) {\u000a        recursively = recursively || false;\u000a        force = force || false;\u000a\u000a        var query = {};\u000a        if (recursively) {\u000a            query.recursive = recursively;\u000a        }\u000a        if (force) {\u000a            query.force = force;\u000a        }\u000a\u000a        return this.base.getWithQuery(url, query, opts).done(preProcessList);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.listForLocation = function (\u000a        location,\u000a        recursively,\u000a        opts\u000a    ) {\u000a        recursively = recursively || false;\u000a        return this.base\u000a            .getWithQuery(resourceForLocation(location), {recursive: recursively}, opts)\u000a            .done(preProcessList);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.issueEntryCommand = function (\u000a        location,\u000a        entryname,\u000a        command,\u000a        data,\u000a        opts\u000a    ) {\u000a        var url = resourceForEntry(location, entryname);\u000a        return this.base.issueCommand(url, command, data, opts);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.select = function (location, path, print, opts) {\u000a        print = print || false;\u000a\u000a        var data = {\u000a            print: print\u000a        };\u000a\u000a        return this.issueEntryCommand(location, path, "select", data, opts);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.analyse = function (location, path, parameters, opts) {\u000a        return this.issueEntryCommand(location, path, "analyse", parameters || {}, opts);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.slice = function (location, path, parameters, opts) {\u000a        return this.issueEntryCommand(location, path, "slice", parameters || {}, opts);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.delete = function (location, path, opts) {\u000a        return this.base.delete(resourceForEntry(location, path), opts);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.copy = function (location, path, destination, opts) {\u000a        return this.issueEntryCommand(\u000a            location,\u000a            path,\u000a            "copy",\u000a            {destination: destination},\u000a            opts\u000a        );\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.move = function (location, path, destination, opts) {\u000a        return this.issueEntryCommand(\u000a            location,\u000a            path,\u000a            "move",\u000a            {destination: destination},\u000a            opts\u000a        );\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.createFolder = function (location, name, path, opts) {\u000a        var data = {foldername: name};\u000a        if (path !== undefined && path !== "") {\u000a            data.path = path;\u000a        }\u000a\u000a        return this.base.postForm(resourceForLocation(location), data, opts);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.upload = function (location, file, data) {\u000a        data = data || {};\u000a\u000a        var filename = data.filename || undefined;\u000a        if (data.userdata && typeof data.userdata === "object") {\u000a            data.userdata = JSON.stringify(userdata);\u000a        }\u000a        return this.base.upload(resourceForLocation(location), file, filename, data);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.download = function (location, path, opts) {\u000a        return this.base.download(downloadForEntry(location, path), opts);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.pathForEntry = function (entry) {\u000a        if (!entry || !entry.hasOwnProperty("parent") || entry.parent == undefined) {\u000a            return "";\u000a        }\u000a\u000a        var recursivePath = function (element, path) {\u000a            if (element.hasOwnProperty("parent") && element.parent != undefined) {\u000a                return recursivePath(element.parent, element.name + "/" + path);\u000a            }\u000a\u000a            return path;\u000a        };\u000a\u000a        return recursivePath(entry.parent, entry.name);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.entryForPath = function (path, root) {\u000a        if (_.isArray(root)) {\u000a            root = {children: root};\u000a        }\u000a\u000a        var recursiveSearch = function (path, entry) {\u000a            if (path.length == 0) {\u000a                return entry;\u000a            }\u000a\u000a            if (!entry.hasOwnProperty("children") || !entry.children) {\u000a                return undefined;\u000a            }\u000a\u000a            var name = path.shift();\u000a            for (var i = 0; i < entry.children.length; i++) {\u000a                if (name == entry.children[i].name) {\u000a                    return recursiveSearch(path, entry.children[i]);\u000a                }\u000a            }\u000a\u000a            return undefined;\u000a        };\u000a\u000a        return recursiveSearch(path.split("/"), root);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.pathForElement = function (element) {\u000a        // TODO Remove in 1.4.x\u000a        log.warn(\u000a            "pathForElement has been renamed to pathForEntry, please use that instead"\u000a        );\u000a        return this.pathForEntry(element);\u000a    };\u000a\u000a    OctoPrintFilesClient.prototype.elementByPath = function (location, startElement) {\u000a        // TODO Remove in 1.4.x\u000a        log.warn(\u000a            "elementByPath has been renamed to entryForPath, please use that instead"\u000a        );\u000a        return this.entryForPath(location, startElement);\u000a    };\u000a\u000a    OctoPrintClient.registerComponent("files", OctoPrintFilesClient);\u000a    return OctoPrintFilesClient;\u000a});\u000a\u000a;\u000a
p0
.