V// source: plugin/DisplayLayerProgress/js/jquery-numberedtextarea.js\u000a/*\u000a * NumberedTextarea - jQuery Plugin\u000a * Textarea with line numbering\u000a *\u000a * Copyright (c) 2015 Dariusz Arciszewski\u000a *\u000a * Requires: jQuery v2.0+\u000a *\u000a * Licensed under the GPL licenses:\u000a *   http://www.gnu.org/licenses/gpl.html\u000a */\u000a\u000a(function ($) {\u000a\u000a    $.fn.numberedtextarea = function(options) {\u000a\u000a        var settings = $.extend({\u000a            color:          null,        // Font color\u000a            borderColor:    null,        // Border color\u000a            class:          null,        // Add class to the 'numberedtextarea-wrapper'\u000a            allowTabChar:   false,       // If true Tab key creates indentation\u000a        }, options);\u000a\u000a        this.each(function() {\u000a            if(this.nodeName.toLowerCase() !== "textarea") {\u000a                console.log('This is not a <textarea>, so no way Jose...');\u000a                return false;\u000a            }\u000a\u000a            addWrapper(this, settings);\u000a            addLineNumbers(this, settings);\u000a\u000a            if(settings.allowTabChar) {\u000a                $(this).allowTabChar();\u000a            }\u000a        });\u000a\u000a        return this;\u000a    };\u000a\u000a    $.fn.allowTabChar = function() {\u000a        if (this.jquery) {\u000a            this.each(function() {\u000a                if (this.nodeType == 1) {\u000a                    var nodeName = this.nodeName.toLowerCase();\u000a                    if (nodeName == "textarea" || (nodeName == "input" && this.type == "text")) {\u000a                        allowTabChar(this);\u000a                    }\u000a                }\u000a            })\u000a        }\u000a        return this;\u000a    }\u000a\u000a\u000a\u000a    function addWrapper(element, settings) {\u000a        var wrapper = $('<div class="numberedtextarea-wrapper"></div>').insertAfter(element);\u000a        $(element).detach().appendTo(wrapper);\u000a    }\u000a\u000a    function addLineNumbers(element, settings) {\u000a        element = $(element);\u000a\u000a        var wrapper = element.parents('.numberedtextarea-wrapper');\u000a\u000a        // Get textarea styles to implement it on line numbers div\u000a        var paddingLeft = parseFloat(element.css('padding-left'));\u000a        var paddingTop = parseFloat(element.css('padding-top'));\u000a        var paddingBottom = parseFloat(element.css('padding-bottom'));\u000a\u000a        var lineNumbers = $('<div class="numberedtextarea-line-numbers"></div>').insertAfter(element);\u000a\u000a        element.css({\u000a            paddingLeft: paddingLeft + lineNumbers.width() + 'px'\u000a        }).on('input propertychange change keyup paste', function() {\u000a            renderLineNumbers(element, settings);\u000a        }).on('scroll', function() {\u000a            scrollLineNumbers(element, settings);\u000a        });\u000a\u000a        lineNumbers.css({\u000a            paddingLeft: paddingLeft + 'px',\u000a            paddingTop: paddingTop + 'px',\u000a            lineHeight: element.css('line-height'),\u000a            fontFamily: element.css('font-family'),\u000a            width: lineNumbers.width() - paddingLeft + 'px',\u000a        });\u000a\u000a        element.trigger('change');\u000a    }\u000a\u000a    function renderLineNumbers(element, settings) {\u000a        element = $(element);\u000a\u000a        var linesDiv = element.parent().find('.numberedtextarea-line-numbers');\u000a        var count = element.val().split("\u005cn").length;\u000a        var paddingBottom = parseFloat(element.css('padding-bottom'));\u000a\u000a        linesDiv.find('.numberedtextarea-number').remove();\u000a\u000a        for(i = 1; i<=count; i++) {\u000a            var line = $('<div class="numberedtextarea-number numberedtextarea-number-' + i + '">' + i + '</div>').appendTo(linesDiv);\u000a\u000a            if(i === count) {\u000a            	line.css('margin-bottom', paddingBottom + 'px');\u000a            }\u000a        }\u000a    }\u000a\u000a    function scrollLineNumbers(element, settings) {\u000a        element = $(element);\u000a        var linesDiv = element.parent().find('.numberedtextarea-line-numbers');\u000a        linesDiv.scrollTop(element.scrollTop());\u000a    }\u000a\u000a    function pasteIntoInput(el, text) {\u000a        el.focus();\u000a        if (typeof el.selectionStart == "number") {\u000a            var val = el.value;\u000a            var selStart = el.selectionStart;\u000a            el.value = val.slice(0, selStart) + text + val.slice(el.selectionEnd);\u000a            el.selectionEnd = el.selectionStart = selStart + text.length;\u000a        } else if (typeof document.selection != "undefined") {\u000a            var textRange = document.selection.createRange();\u000a            textRange.text = text;\u000a            textRange.collapse(false);\u000a            textRange.select();\u000a        }\u000a    }\u000a\u000a    function allowTabChar(el) {\u000a        $(el).keydown(function(e) {\u000a            if (e.which == 9) {\u000a                pasteIntoInput(this, "\u005ct");\u000a                return false;\u000a            }\u000a        });\u000a\u000a        // For Opera, which only allows suppression of keypress events, not keydown\u000a        $(el).keypress(function(e) {\u000a            if (e.which == 9) {\u000a                return false;\u000a            }\u000a        });\u000a    }\u000a\u000a}(jQuery));\u000a\u000a;\u000a
p0
.