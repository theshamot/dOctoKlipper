V// source: plugin/python3plugincompatibilitycheck/js/Python3PluginCompatibilityCheck.js\u000a/*\u000a * View model for Python 3 Plugin Compatibility Check\u000a *\u000a * Author: jneilliii\u000a * License: AGPLv3\u000a */\u000a$(function() {\u000a	function Python3plugincompatibilitycheckViewModel(parameters) {\u000a		var self = this;\u000a\u000a		self.settingsViewModel = parameters[0];\u000a		self.pluginManagerViewModel = parameters[1];\u000a		self.errorMessage = ko.observable(false);\u000a		self.checking = ko.observableArray([]);\u000a		self.allCompatible = ko.observable(false);\u000a		self.python_version = ko.observable(3.6);\u000a		self.plugins = ko.observableArray([]);\u000a		self.incompatible = ko.computed(function(){\u000a			return ko.utils.arrayFilter(self.plugins(), function(item) {\u000a				return self.pluginManagerViewModel.installedPlugins().includes(item.id()) && item.python_compat() == false;\u000a			});\u000a		});\u000a\u000a		self.issue_url = function(homepage_url){\u000a			var issue_url = homepage_url.replace(/\u005c/$/, "") + '/issues?q=is%3Aissue+python+3';\u000a			return (homepage_url.indexOf('https://github.com/') > -1)  ? issue_url : homepage_url;\u000a		}\u000a\u000a		self.onSettingsHidden = function(){\u000a			self.errorMessage(false);\u000a			self.allCompatible(false);\u000a			self.checking([]);\u000a			self.plugins([]);\u000a		};\u000a\u000a		self.checkPlugins = function() {\u000a			self.checking.push('started');\u000a			$.ajax({\u000a				url: API_BASEURL + "plugin/python3plugincompatibilitycheck",\u000a				type: "GET",\u000a				dataType: "json",\u000a				data: {python_version:self.python_version()},\u000a				contentType: "application/json; charset=UTF-8"\u000a			}).done(function(data){\u000a				self.plugins(ko.mapping.fromJS(data)());\u000a				if (self.incompatible().length > 0){\u000a					ko.utils.arrayForEach(self.incompatible(), function(item){\u000a						self.checking.push(item.homepage());\u000a						var github_api_url = item.homepage().replace('https://github.com/','https://api.github.com/repos/');\u000a						if(github_api_url.indexOf('https://api.github.com/repos/') > -1) {\u000a							$.ajax({\u000a								url: github_api_url,\u000a								contentType: "application/json; charset=UTF-8"\u000a							}).done(function(data){\u000a								var last_updated = moment(data.pushed_at).format('L');\u000a								$('#settings_plugin_python3plugincompatibilitycheck a').filter(function(){return $(this).attr('href').toLowerCase().indexOf(data.html_url.toLowerCase()) > -1}).after(' <small>(' + last_updated + ')</small>');\u000a							}).fail(function(){\u000a								self.errorMessage(true);\u000a							}).always(function(){\u000a								self.checking.remove(item.homepage());\u000a							});\u000a						} else {\u000a							$('#settings_plugin_python3plugincompatibilitycheck a').filter(function(){return $(this).attr('href').toLowerCase().indexOf(item.homepage().toLowerCase()) > -1}).after(' <small>(Homepage not on GitHub, manual compatibility check required)</small>');\u000a							self.errorMessage(true);\u000a							self.checking.remove(item.homepage());\u000a						}\u000a					});\u000a				} else {\u000a					self.allCompatible(true);\u000a				}\u000a			});\u000a			self.checking.remove('started');\u000a		};\u000a	};\u000a\u000a	OCTOPRINT_VIEWMODELS.push({\u000a		construct: Python3plugincompatibilitycheckViewModel,\u000a		dependencies: [ "settingsViewModel", "pluginManagerViewModel" ],\u000a		elements: [ "#settings_plugin_python3plugincompatibilitycheck" ]\u000a	});\u000a});\u000a\u000a;\u000a
p0
.