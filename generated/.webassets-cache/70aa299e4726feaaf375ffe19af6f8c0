V// source: plugin/announcements/js/announcements.js\u000a$(function () {\u000a    function AnnouncementsViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a        self.settings = parameters[1];\u000a        self.access = parameters[2];\u000a\u000a        self.channels = new ItemListHelper(\u000a            "plugin.announcements.channels",\u000a            {\u000a                channel: function (a, b) {\u000a                    // sorts ascending\u000a                    if (\u000a                        a["channel"].toLocaleLowerCase() <\u000a                        b["channel"].toLocaleLowerCase()\u000a                    )\u000a                        return -1;\u000a                    if (\u000a                        a["channel"].toLocaleLowerCase() >\u000a                        b["channel"].toLocaleLowerCase()\u000a                    )\u000a                        return 1;\u000a                    return 0;\u000a                }\u000a            },\u000a            {},\u000a            "name",\u000a            [],\u000a            [],\u000a            5\u000a        );\u000a\u000a        self.unread = ko.observable();\u000a        self.hiddenChannels = [];\u000a        self.channelNotifications = {};\u000a\u000a        self.announcementDialog = undefined;\u000a        self.announcementDialogContent = undefined;\u000a        self.announcementDialogTabs = undefined;\u000a\u000a        self.setupTabLink = function (item) {\u000a            $("a[data-toggle='tab']", item).on("show", self.resetContentScroll);\u000a        };\u000a\u000a        self.resetContentScroll = function () {\u000a            self.announcementDialogContent.scrollTop(0);\u000a        };\u000a\u000a        self.toggleButtonCss = function (data) {\u000a            var icon = data.enabled ? "fa fa-toggle-on" : "fa fa-toggle-off";\u000a            var disabled = self.enableToggle(data) ? "" : " disabled";\u000a\u000a            return icon + disabled;\u000a        };\u000a\u000a        self.toggleButtonTitle = function (data) {\u000a            return data.forced\u000a                ? gettext("Cannot be toggled")\u000a                : data.enabled\u000a                ? gettext("Disable Channel")\u000a                : gettext("Enable Channel");\u000a        };\u000a\u000a        self.enableToggle = function (data) {\u000a            return !data.forced;\u000a        };\u000a\u000a        self.cleanedLink = function (data) {\u000a            // Strips any query parameters from the link and returns it\u000a            var link = data.link;\u000a            if (!link) return link;\u000a\u000a            var queryPos = link.indexOf("?");\u000a            if (queryPos !== -1) {\u000a                link = link.substr(0, queryPos);\u000a            }\u000a            return link;\u000a        };\u000a\u000a        self.markRead = function (channel, until, reload) {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ANNOUNCEMENTS_READ\u000a                )\u000a            )\u000a                return;\u000a\u000a            reload = !!reload;\u000a\u000a            var url = PLUGIN_BASEURL + "announcements/channels/" + channel;\u000a\u000a            var payload = {\u000a                command: "read",\u000a                until: until\u000a            };\u000a\u000a            $.ajax({\u000a                url: url,\u000a                type: "POST",\u000a                dataType: "json",\u000a                data: JSON.stringify(payload),\u000a                contentType: "application/json; charset=UTF-8",\u000a                success: function () {\u000a                    if (reload) {\u000a                        self.retrieveData();\u000a                    }\u000a                }\u000a            });\u000a        };\u000a\u000a        self.toggleChannel = function (channel) {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ANNOUNCEMENTS_MANAGE\u000a                )\u000a            )\u000a                return;\u000a\u000a            var url = PLUGIN_BASEURL + "announcements/channels/" + channel;\u000a\u000a            var payload = {\u000a                command: "toggle"\u000a            };\u000a\u000a            $.ajax({\u000a                url: url,\u000a                type: "POST",\u000a                dataType: "json",\u000a                data: JSON.stringify(payload),\u000a                contentType: "application/json; charset=UTF-8",\u000a                success: function () {\u000a                    self.retrieveData();\u000a                }\u000a            });\u000a        };\u000a\u000a        self.refreshAnnouncements = function () {\u000a            self.retrieveData(true);\u000a        };\u000a\u000a        self.retrieveData = function (force) {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ANNOUNCEMENTS_READ\u000a                )\u000a            )\u000a                return;\u000a\u000a            var url = PLUGIN_BASEURL + "announcements/channels";\u000a            if (force) {\u000a                url += "?force=true";\u000a            }\u000a\u000a            $.ajax({\u000a                url: url,\u000a                type: "GET",\u000a                dataType: "json",\u000a                success: function (data) {\u000a                    self.fromResponse(data);\u000a                }\u000a            });\u000a        };\u000a\u000a        self.fromResponse = function (data) {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ANNOUNCEMENTS_READ\u000a                )\u000a            )\u000a                return;\u000a\u000a            var currentTab = $("li.active a", self.announcementDialogTabs).attr("href");\u000a\u000a            var unread = 0;\u000a            var channels = [];\u000a            _.each(data.channels, function (value) {\u000a                value.last = value.data.length ? value.data[0].published : undefined;\u000a                value.count = value.data.length;\u000a                unread += value.unread;\u000a                channels.push(value);\u000a            });\u000a            self.channels.updateItems(channels);\u000a            self.unread(unread);\u000a\u000a            self.displayAnnouncements(channels);\u000a\u000a            self.selectTab(currentTab);\u000a        };\u000a\u000a        self.showAnnouncementDialog = function (channel) {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ANNOUNCEMENTS_READ\u000a                )\u000a            )\u000a                return;\u000a\u000a            // lazy load images that still need lazy-loading\u000a            $("#plugin_announcements_dialog_content article img").lazyload();\u000a\u000a            self.announcementDialogContent.scrollTop(0);\u000a\u000a            if (!self.announcementDialog.hasClass("in")) {\u000a                self.announcementDialog\u000a                    .modal({\u000a                        minHeight: function () {\u000a                            return Math.max($.fn.modal.defaults.maxHeight() - 80, 250);\u000a                        }\u000a                    })\u000a                    .css({\u000a                        "width": "auto",\u000a                        "margin-left": function () {\u000a                            return -($(this).width() / 2);\u000a                        }\u000a                    });\u000a            }\u000a\u000a            var tab = undefined;\u000a            if (channel) {\u000a                tab = "#plugin_announcements_dialog_channel_" + channel;\u000a            }\u000a            self.selectTab(tab);\u000a\u000a            return false;\u000a        };\u000a\u000a        self.selectTab = function (tab) {\u000a            if (tab != undefined) {\u000a                if (!_.startsWith(tab, "#")) {\u000a                    tab = "#" + tab;\u000a                }\u000a                $('a[href="' + tab + '"]', self.announcementDialogTabs).tab("show");\u000a            } else {\u000a                $("a:first", self.announcementDialogTabs).tab("show");\u000a            }\u000a        };\u000a\u000a        self.displayAnnouncements = function (channels) {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ANNOUNCEMENTS_READ\u000a                )\u000a            )\u000a                return;\u000a\u000a            var displayLimit = self.settings.settings.plugins.announcements.display_limit();\u000a            var maxLength = self.settings.settings.plugins.announcements.summary_limit();\u000a\u000a            var cutAfterNewline = function (text) {\u000a                text = text.trim();\u000a\u000a                var firstNewlinePos = text.indexOf("\u005cn");\u000a                if (firstNewlinePos > 0) {\u000a                    text = text.substr(0, firstNewlinePos).trim();\u000a                }\u000a\u000a                return text;\u000a            };\u000a\u000a            var stripParagraphs = function (text) {\u000a                if (_.startsWith(text, "<p>")) {\u000a                    text = text.substr("<p>".length);\u000a                }\u000a                if (_.endsWith(text, "</p>")) {\u000a                    text = text.substr(0, text.length - "</p>".length);\u000a                }\u000a\u000a                return text.replace(/<\u005c/p>\u005cs*<p>/gi, "<br>");\u000a            };\u000a\u000a            _.each(channels, function (value) {\u000a                var key = value.key;\u000a                var channel = value.channel;\u000a                var priority = value.priority;\u000a                var items = value.data;\u000a\u000a                if ($.inArray(key, self.hiddenChannels) > -1) {\u000a                    // channel currently ignored\u000a                    return;\u000a                }\u000a\u000a                var newItems = _.filter(items, function (entry) {\u000a                    return !entry.read;\u000a                });\u000a                if (newItems.length == 0) {\u000a                    // no new items at all, we don't display anything for this channel\u000a                    return;\u000a                }\u000a\u000a                var displayedItems;\u000a                if (newItems.length > displayLimit) {\u000a                    displayedItems = newItems.slice(0, displayLimit);\u000a                } else {\u000a                    displayedItems = newItems;\u000a                }\u000a                var rest = newItems.length - displayedItems.length;\u000a\u000a                var text = "<ul style='margin-top: 10px; margin-bottom: 10px'>";\u000a                _.each(displayedItems, function (item) {\u000a                    var limitedSummary = stripParagraphs(\u000a                        item.summary_without_images.trim()\u000a                    );\u000a                    if (limitedSummary.length > maxLength) {\u000a                        limitedSummary = limitedSummary.substr(0, maxLength);\u000a                        limitedSummary = limitedSummary.substr(\u000a                            0,\u000a                            Math.min(\u000a                                limitedSummary.length,\u000a                                limitedSummary.lastIndexOf(" ")\u000a                            )\u000a                        );\u000a                        limitedSummary += "...";\u000a                    }\u000a\u000a                    text +=\u000a                        "<li><a href='" +\u000a                        item.link +\u000a                        "' target='_blank' rel='noreferrer noopener'>" +\u000a                        cutAfterNewline(item.title) +\u000a                        "</a><br><small>" +\u000a                        formatTimeAgo(item.published) +\u000a                        "</small><p>" +\u000a                        limitedSummary +\u000a                        "</p></li>";\u000a                });\u000a                text += "</ul>";\u000a\u000a                if (rest) {\u000a                    text +=\u000a                        "<p>" +\u000a                        gettext(_.sprintf("... and %(rest)d more.", {rest: rest})) +\u000a                        "</p>";\u000a                }\u000a\u000a                text +=\u000a                    "<small>" +\u000a                    gettext(\u000a                        "You can edit your announcement subscriptions under Settings > Announcements."\u000a                    ) +\u000a                    "</small>";\u000a\u000a                var options = {\u000a                    title: channel,\u000a                    text: text,\u000a                    hide: false,\u000a                    confirm: {\u000a                        confirm: true,\u000a                        buttons: [\u000a                            {\u000a                                text: gettext("Later"),\u000a                                click: function (notice) {\u000a                                    notice.remove();\u000a                                    self.hiddenChannels.push(key);\u000a                                }\u000a                            },\u000a                            {\u000a                                text: gettext("Mark read"),\u000a                                click: function (notice) {\u000a                                    notice.remove();\u000a                                    self.markRead(key, value.last);\u000a                                }\u000a                            },\u000a                            {\u000a                                text: gettext("Read..."),\u000a                                addClass: "btn-primary",\u000a                                click: function (notice) {\u000a                                    notice.remove();\u000a                                    self.showAnnouncementDialog(key);\u000a                                    self.markRead(key, value.last);\u000a                                }\u000a                            }\u000a                        ]\u000a                    },\u000a                    buttons: {\u000a                        sticker: false,\u000a                        closer: false\u000a                    }\u000a                };\u000a\u000a                if (priority == 1) {\u000a                    options.type = "error";\u000a                }\u000a\u000a                if (self.channelNotifications[key]) {\u000a                    self.channelNotifications[key].remove();\u000a                }\u000a                self.channelNotifications[key] = new PNotify(options);\u000a            });\u000a        };\u000a\u000a        self.hideAnnouncements = function () {\u000a            _.each(self.channelNotifications, function (notification, key) {\u000a                notification.remove();\u000a            });\u000a            self.channelNotifications = {};\u000a        };\u000a\u000a        self.configureAnnouncements = function () {\u000a            self.settings.show("settings_plugin_announcements");\u000a        };\u000a\u000a        self.onUserPermissionsChanged = self.onUserLoggedIn = self.onUserLoggedOut = function () {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ANNOUNCEMENTS_READ\u000a                )\u000a            ) {\u000a                self.hideAnnouncements();\u000a            } else {\u000a                self.retrieveData();\u000a            }\u000a        };\u000a\u000a        self.onStartup = function () {\u000a            self.announcementDialog = $("#plugin_announcements_dialog");\u000a            self.announcementDialogContent = $("#plugin_announcements_dialog_content");\u000a            self.announcementDialogTabs = $("#plugin_announcements_dialog_tabs");\u000a        };\u000a\u000a        self.onEventConnectivityChanged = function (payload) {\u000a            if (!payload || !payload.new) return;\u000a            self.retrieveData();\u000a        };\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push({\u000a        construct: AnnouncementsViewModel,\u000a        dependencies: ["loginStateViewModel", "settingsViewModel", "accessViewModel"],\u000a        elements: [\u000a            "#plugin_announcements_dialog",\u000a            "#settings_plugin_announcements",\u000a            "#navbar_plugin_announcements"\u000a        ]\u000a    });\u000a});\u000a\u000a;\u000a
p0
.