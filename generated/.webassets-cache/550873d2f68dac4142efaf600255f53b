V// source: plugin/PrintJobHistory/js/PrintJobHistory-ComponentFactory.js\u000a\u000a\u000afunction PrintJobComponentFactory(pluginId) {\u000a\u000a    this.pluginId = pluginId\u000a    this.COMPONENT_PREFIX = "component_";\u000a\u000a    ////////////////////////////////////////////////////////////////////////////////////////////////// DATETIME - PICKER\u000a    /*\u000a    <div class="input-append datetime">\u000a        <input id="DueDate" type="text" value="13.11.2017 13:24" class="input-large; text-right"><span class="add-on" id="DueDate-Icon"><i class="icon-th"></i></span>\u000a    </div>\u000a    */\u000a    this.createDateTimePicker = function(elementId, showTimePicker){\u000a\u000a        if (showTimePicker == null){\u000a            showTimePicker = true;\u000a            dateTimeFormat = 'd.m.Y H:i';\u000a        }\u000a        if (showTimePicker == false){\u000a            dateTimeFormat = 'd.m.Y';\u000a        }\u000a\u000a        var elementSelector = "#" + elementId ;\u000a        // Build defualt widget\u000a        var datePicker = $(elementSelector).datetimepicker({\u000a            format:dateTimeFormat,\u000a            closeOnDateSelect:true,\u000a            closeOnTimeSelect:false,\u000a            timepicker:showTimePicker,\u000a            weeks:true\u000a        });\u000a\u000a        $($(elementSelector).parent().find('span[class=add-on]')[0]).on('click', function () {\u000a            if (componentViewModel.isEnabled() == true){\u000a                $(elementSelector).datetimepicker('show');\u000a            }\u000a        });\u000a\u000a        // sync: jquery -> observable\u000a\u000a        var componentViewModel = {\u000a            currentDateTime: ko.observable(),\u000a            isEnabled: ko.observable(true),\u000a            datePicker: datePicker\u000a        }\u000a\u000a        return componentViewModel;\u000a    }\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a\u000a/*\u000a    <component_printstatusselection-bla></component_printstatusselection-bla>\u000a\u000a            blaViewModel = self.componentFactory.createHelloWorldComponent("bla");\u000a            blaViewModel.hello("SUPER!!!!");\u000a\u000a*/\u000a    this.createHelloWorldComponent = function(name){\u000a\u000a        componentName = this.COMPONENT_PREFIX + "printstatusselection-" + name;\u000a\u000a        var componentViewModel = {\u000a            hello: ko.observable("World")\u000a        }\u000a\u000a        componentTemplate = "<b>Hello <span data-bind='text: hello'></span></b>";\u000a\u000a        ko.components.register(componentName, {\u000a            viewModel: { instance: componentViewModel },\u000a            template: componentTemplate\u000a        });\u000a        return componentViewModel;\u000a    }\u000a\u000a\u000a}\u000a\u000a;\u000a
p0
.