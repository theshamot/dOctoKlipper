V// source: js/app/client/access.js\u000a(function (global, factory) {\u000a    if (typeof define === "function" && define.amd) {\u000a        define("OctoPrintAccessClient", ["OctoPrintClient"], factory);\u000a    } else {\u000a        global.OctoPrintAccessClient = factory(global.OctoPrintClient);\u000a    }\u000a})(this, function (OctoPrintClient) {\u000a    var baseAccessUrl = "api/access";\u000a\u000a    //~~ permissions client api\u000a\u000a    var OctoPrintAccessPermissionsClient = function (access) {\u000a        this.access = access;\u000a        this.base = this.access.base;\u000a\u000a        var baseUrl = baseAccessUrl + "/permissions";\u000a        this.url = function () {\u000a            if (arguments.length) {\u000a                return baseUrl + "/" + Array.prototype.join.call(arguments, "/");\u000a            } else {\u000a                return baseUrl;\u000a            }\u000a        };\u000a    };\u000a\u000a    OctoPrintAccessPermissionsClient.prototype.list = function (opts) {\u000a        return this.base.get(this.url(), opts);\u000a    };\u000a\u000a    //~~ groups client api\u000a\u000a    var OctoPrintAccessGroupsClient = function (access) {\u000a        this.access = access;\u000a        this.base = this.access.base;\u000a\u000a        var baseUrl = baseAccessUrl + "/groups";\u000a        this.url = function () {\u000a            if (arguments.length) {\u000a                return baseUrl + "/" + Array.prototype.join.call(arguments, "/");\u000a            } else {\u000a                return baseUrl;\u000a            }\u000a        };\u000a    };\u000a\u000a    OctoPrintAccessGroupsClient.prototype.list = function (opts) {\u000a        return this.base.get(this.url(), opts);\u000a    };\u000a\u000a    OctoPrintAccessGroupsClient.prototype.add = function (group, opts) {\u000a        if (!group.key) {\u000a            throw new OctoPrintClient.InvalidArgumentError("group key must be set");\u000a        }\u000a        if (!group.name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("group name must be set");\u000a        }\u000a\u000a        var data = {\u000a            key: group.key,\u000a            name: group.name,\u000a            description: group.description,\u000a            permissions: group.permissions,\u000a            subgroups: group.subgroups,\u000a            default: group.default\u000a        };\u000a\u000a        return this.base.postJson(this.url(), data, opts);\u000a    };\u000a\u000a    OctoPrintAccessGroupsClient.prototype.get = function (key, opts) {\u000a        if (!key) {\u000a            throw new OctoPrintClient.InvalidArgumentError("group key must be set");\u000a        }\u000a\u000a        return this.base.get(this.url(key), opts);\u000a    };\u000a\u000a    OctoPrintAccessGroupsClient.prototype.update = function (group, opts) {\u000a        if (!group.key) {\u000a            throw new OctoPrintClient.InvalidArgumentError("group key must be set");\u000a        }\u000a\u000a        var data = {\u000a            description: group.hasOwnProperty("description") ? group.description : "",\u000a            permissions: group.permissions,\u000a            subgroups: group.subgroups,\u000a            default: group.default\u000a        };\u000a        return this.base.putJson(this.url(group.key), data, opts);\u000a    };\u000a\u000a    OctoPrintAccessGroupsClient.prototype.delete = function (key, opts) {\u000a        if (!key) {\u000a            throw new OctoPrintClient.InvalidArgumentError("group key must be set");\u000a        }\u000a\u000a        return this.base.delete(this.url(key), opts);\u000a    };\u000a\u000a    //~~ users client api\u000a\u000a    var OctoPrintAccessUsersClient = function (access) {\u000a        this.access = access;\u000a        this.base = this.access.base;\u000a\u000a        var baseUrl = baseAccessUrl + "/users";\u000a        this.url = function () {\u000a            if (arguments.length) {\u000a                return baseUrl + "/" + Array.prototype.join.call(arguments, "/");\u000a            } else {\u000a                return baseUrl;\u000a            }\u000a        };\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.list = function (opts) {\u000a        return this.base.get(this.url(), opts);\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.add = function (user, opts) {\u000a        if (!user.name || !user.password) {\u000a            throw new OctoPrintClient.InvalidArgumentError(\u000a                "Both user's name and password need to be set"\u000a            );\u000a        }\u000a\u000a        var data = {\u000a            name: user.name,\u000a            password: user.password,\u000a            groups: user.hasOwnProperty("groups") ? user.groups : [],\u000a            permissions: user.hasOwnProperty("permissions") ? user.permissions : [],\u000a            active: user.hasOwnProperty("active") ? !!user.active : true,\u000a            admin: user.hasOwnProperty("admin") ? !!user.admin : false\u000a        };\u000a\u000a        return this.base.postJson(this.url(), data, opts);\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.get = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.get(this.url(name), opts);\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.update = function (\u000a        name,\u000a        active,\u000a        admin,\u000a        permissions,\u000a        groups,\u000a        opts\u000a    ) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        var data = {\u000a            active: !!active,\u000a            groups: groups,\u000a            permissions: permissions,\u000a            admin: !!admin\u000a        };\u000a        return this.base.putJson(this.url(name), data, opts);\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.delete = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.delete(this.url(name), opts);\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.changePassword = function (\u000a        name,\u000a        password,\u000a        opts\u000a    ) {\u000a        if (!name || !password) {\u000a            throw new OctoPrintClient.InvalidArgumentError(\u000a                "user name and password must be set"\u000a            );\u000a        }\u000a\u000a        var data = {\u000a            password: password\u000a        };\u000a        return this.base.putJson(this.url(name, "password"), data, opts);\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.generateApiKey = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.postJson(this.url(name, "apikey"), opts);\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.resetApiKey = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.delete(this.url(name, "apikey"), opts);\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.getSettings = function (name, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        return this.base.get(this.url(name, "settings"), opts);\u000a    };\u000a\u000a    OctoPrintAccessUsersClient.prototype.saveSettings = function (name, settings, opts) {\u000a        if (!name) {\u000a            throw new OctoPrintClient.InvalidArgumentError("user name must be set");\u000a        }\u000a\u000a        settings = settings || {};\u000a        return this.base.patchJson(this.url(name, "settings"), settings, opts);\u000a    };\u000a\u000a    var OctoPrintAccessClient = function (base) {\u000a        this.base = base;\u000a\u000a        this.permissions = new OctoPrintAccessPermissionsClient(this);\u000a        this.groups = new OctoPrintAccessGroupsClient(this);\u000a        this.users = new OctoPrintAccessUsersClient(this);\u000a    };\u000a    OctoPrintClient.registerComponent("access", OctoPrintAccessClient);\u000a    return OctoPrintAccessClient;\u000a});\u000a\u000a;\u000a
p0
.