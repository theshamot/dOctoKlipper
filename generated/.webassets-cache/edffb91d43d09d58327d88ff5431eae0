V// source: plugin/bedlevelvisualizer/js/ko.iconpicker.js\u000ako.bindingHandlers.iconpicker = {\u000a    init: function(element, valueAccessor, allBindingsAccessor) {\u000a        //initialize iconpicker with some optional options\u000a        var options = allBindingsAccessor().iconpickerOptions || {};\u000a        var value = ko.utils.unwrapObservable(valueAccessor());\u000a        $(element).attr("data-selected", value);\u000a		$(element).val(value);\u000a        $(element).iconpicker(options);\u000a\u000a        //handle the field changing\u000a        ko.utils.registerEventHandler(element, "iconpickerSelected", function (event) {\u000a            var observable = valueAccessor();\u000a            observable(event.iconpickerValue);\u000a        });\u000a\u000a        //handle disposal (if KO removes by the template binding)\u000a        ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\u000a            $(element).iconpicker("destroy");\u000a        });\u000a\u000a    },\u000a    //update the control when the view model changes\u000a    update: function(element, valueAccessor) {\u000a        var value = ko.utils.unwrapObservable(valueAccessor());\u000a        $(element).attr("data-selected", value);\u000a		$(element).val(value);\u000a    }\u000a};\u000a;\u000a
p0
.