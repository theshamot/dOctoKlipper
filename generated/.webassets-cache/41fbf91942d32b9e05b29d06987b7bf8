V// source: plugin/klipper/js/klipper_param_macro.js\u000a// <Octoprint Klipper Plugin>\u000a\u000a// This program is free software: you can redistribute it and/or modify\u000a// it under the terms of the GNU Affero General Public License as\u000a// published by the Free Software Foundation, either version 3 of the\u000a// License, or (at your option) any later version.\u000a \u000a// This program is distributed in the hope that it will be useful,\u000a// but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\u000a// GNU Affero General Public License for more details.\u000a \u000a// You should have received a copy of the GNU Affero General Public License\u000a// along with this program.  If not, see <https://www.gnu.org/licenses/>.\u000a\u000a$(function() {\u000a    function KlipperMacroDialogViewModel(parameters) {\u000a        var self = this;\u000a        \u000a        self.parameters = ko.observableArray();\u000a        self.interpolatedCmd;\u000a        self.macro;\u000a        self.macroName = ko.observable();\u000a        \u000a        var paramObjRegex = /{(.*?)}/g;\u000a        var keyValueRegex = /(\u005cw*)\u005cs*:\u005cs*([\u005cw\u005cs°"|]*)/g;\u000a              \u000a        self.process = function(macro) {\u000a           self.macro = macro.macro();\u000a           self.macroName(macro.name());\u000a           \u000a           var matches = self.macro.match(paramObjRegex);\u000a           var params = [];\u000a           \u000a           for (var i=0; i < matches.length; i++) {\u000a              var obj = {};\u000a              var res = keyValueRegex.exec(matches[i]);\u000a              \u000a              while (res != null) {\u000a                 if("options" == res[1]) {\u000a                    obj["options"] = res[2].trim().split("|");\u000a                 } else {\u000a                    obj[res[1]] = res[2].trim();\u000a                 }\u000a                 res = keyValueRegex.exec(matches[i]);\u000a              }\u000a              \u000a              if(!("label" in obj)) {\u000a                 obj["label"] = "Input " + (i+1);\u000a              }\u000a              \u000a              if(!("unit" in obj)) {\u000a                 obj["unit"] = "";\u000a              }\u000a              \u000a              if("default" in obj) {\u000a                 obj["value"] = obj["default"];\u000a              }\u000a              \u000a              params.push(obj);\u000a           }\u000a           self.parameters(params);\u000a        }\u000a        \u000a        self.executeMacro = function() {\u000a           var i=-1;\u000a           \u000a           function replaceParams(match) {\u000a              i++;\u000a              return self.parameters()[i]["value"];\u000a           }\u000a           // Use .split to create an array of strings which is sent to \u000a           // OctoPrint.control.sendGcode instead of a single string.\u000a           expanded = self.macro.replace(paramObjRegex, replaceParams)\u000a           expanded = expanded.split(/\u005cr\u005cn|\u005cr|\u005cn/);\u000a\u000a           OctoPrint.control.sendGcode(expanded);\u000a        }\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push({\u000a        construct: KlipperMacroDialogViewModel,\u000a        dependencies: [],\u000a        elements: ["#klipper_macro_dialog"]\u000a    });\u000a});\u000a\u000a;\u000a
p0
.