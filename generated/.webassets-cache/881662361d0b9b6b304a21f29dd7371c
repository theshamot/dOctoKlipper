V// source: plugin/action_command_prompt/js/action_command_prompt.js\u000a$(function () {\u000a    function ActionCommandPromptViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a        self.access = parameters[1];\u000a\u000a        self.modal = ko.observable(undefined);\u000a\u000a        self.text = ko.observable();\u000a        self.buttons = ko.observableArray([]);\u000a\u000a        self.active = ko.pureComputed(function () {\u000a            return self.text() !== undefined;\u000a        });\u000a        self.visible = ko.pureComputed(function () {\u000a            return self.modal() !== undefined;\u000a        });\u000a\u000a        self.requestData = function () {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ACTION_COMMAND_PROMPT_INTERACT\u000a                )\u000a            )\u000a                return;\u000a\u000a            OctoPrint.plugins.action_command_prompt.get().done(self.fromResponse);\u000a        };\u000a\u000a        self.fromResponse = function (data) {\u000a            if (data.hasOwnProperty("text") && data.hasOwnProperty("choices")) {\u000a                self.text(data.text);\u000a                self.buttons(data.choices);\u000a                self.showPrompt();\u000a            } else {\u000a                self.text(undefined);\u000a                self.buttons([]);\u000a            }\u000a        };\u000a\u000a        self.showPrompt = function () {\u000a            var text = self.text();\u000a            var buttons = self.buttons();\u000a\u000a            var opts = {\u000a                title: gettext("Message from your printer"),\u000a                message: text,\u000a                selections: buttons,\u000a                maycancel: true, // see #3171\u000a                onselect: function (index) {\u000a                    if (index > -1) {\u000a                        self._select(index);\u000a                    }\u000a                },\u000a                onclose: function () {\u000a                    self.modal(undefined);\u000a                }\u000a            };\u000a\u000a            self.modal(showSelectionDialog(opts));\u000a        };\u000a\u000a        self._select = function (index) {\u000a            OctoPrint.plugins.action_command_prompt.select(index);\u000a        };\u000a\u000a        self._closePrompt = function () {\u000a            var modal = self.modal();\u000a            if (modal) {\u000a                modal.modal("hide");\u000a            }\u000a        };\u000a\u000a        self.onStartupComplete = function () {\u000a            self.requestData();\u000a        };\u000a\u000a        self.onDataUpdaterPluginMessage = function (plugin, data) {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ACTION_COMMAND_PROMPT_INTERACT\u000a                )\u000a            )\u000a                return;\u000a            if (plugin !== "action_command_prompt") {\u000a                return;\u000a            }\u000a\u000a            switch (data.action) {\u000a                case "show": {\u000a                    self.text(data.text);\u000a                    self.buttons(data.choices);\u000a                    self.showPrompt();\u000a                    break;\u000a                }\u000a                case "close": {\u000a                    self.text(undefined);\u000a                    self.buttons([]);\u000a                    self._closePrompt();\u000a                    break;\u000a                }\u000a            }\u000a        };\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push({\u000a        construct: ActionCommandPromptViewModel,\u000a        dependencies: ["loginStateViewModel", "accessViewModel"],\u000a        elements: ["#navbar_plugin_action_command_prompt"]\u000a    });\u000a});\u000a\u000a;\u000a
p0
.