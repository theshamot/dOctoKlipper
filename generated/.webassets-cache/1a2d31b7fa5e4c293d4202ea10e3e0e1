V// source: plugin/action_command_notification/js/action_command_notification.js\u000a$(function () {\u000a    function ActionCommandNotificationViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a        self.access = parameters[1];\u000a        self.settings = parameters[2];\u000a\u000a        self.notifications = ko.observableArray([]);\u000a        self.sortDesc = ko.observable(false);\u000a        self.sortDesc.subscribe(function () {\u000a            self._toLocalStorage();\u000a        });\u000a\u000a        self.toDateTimeString = function (timestamp) {\u000a            return formatDate(timestamp);\u000a        };\u000a\u000a        self.requestData = function () {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ACTION_COMMAND_NOTIFICATION_SHOW\u000a                )\u000a            )\u000a                return;\u000a\u000a            OctoPrint.plugins.action_command_notification.get().done(self.fromResponse);\u000a        };\u000a\u000a        self.fromResponse = function (response) {\u000a            var notifications = response.notifications;\u000a            if (self.sortDesc()) {\u000a                notifications.reverse();\u000a            }\u000a            self.notifications(notifications);\u000a        };\u000a\u000a        self.clear = function () {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ACTION_COMMAND_NOTIFICATION_CLEAR\u000a                )\u000a            )\u000a                return;\u000a\u000a            OctoPrint.plugins.action_command_notification.clear();\u000a        };\u000a\u000a        self.toggleSorting = function () {\u000a            self.sortDesc(!self.sortDesc());\u000a            self.requestData();\u000a        };\u000a\u000a        self.onStartup = self.onUserLoggedIn = self.onUserLoggedOut = function () {\u000a            self.requestData();\u000a        };\u000a\u000a        self.onDataUpdaterPluginMessage = function (plugin, data) {\u000a            if (\u000a                !self.loginState.hasPermission(\u000a                    self.access.permissions.PLUGIN_ACTION_COMMAND_NOTIFICATION_SHOW\u000a                )\u000a            )\u000a                return;\u000a            if (plugin !== "action_command_notification") {\u000a                return;\u000a            }\u000a\u000a            self.requestData();\u000a\u000a            if (\u000a                data.message &&\u000a                self.settings.settings.plugins.action_command_notification.enable_popups()\u000a            ) {\u000a                new PNotify({\u000a                    title: gettext("Printer Notification"),\u000a                    text: data.message,\u000a                    hide: false,\u000a                    icon: "fa fa-bell-o",\u000a                    buttons: {\u000a                        sticker: false,\u000a                        closer: true\u000a                    }\u000a                });\u000a            }\u000a        };\u000a\u000a        var optionsLocalStorageKey = "core.gcodeviewer.options";\u000a        self._toLocalStorage = function () {\u000a            saveToLocalStorage(optionsLocalStorageKey, {sortDesc: self.sortDesc()});\u000a        };\u000a\u000a        self._fromLocalStorage = function () {\u000a            var data = loadFromLocalStorage(optionsLocalStorageKey);\u000a            if (data["sortDesc"] !== undefined) {\u000a                self.sortDesc(!!data["sortDesc"]);\u000a            }\u000a        };\u000a\u000a        self._fromLocalStorage();\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push({\u000a        construct: ActionCommandNotificationViewModel,\u000a        dependencies: ["loginStateViewModel", "accessViewModel", "settingsViewModel"],\u000a        elements: ["#sidebar_plugin_action_command_notification_wrapper"]\u000a    });\u000a});\u000a\u000a;\u000a
p0
.