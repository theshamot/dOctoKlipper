V// source: js/app/client/base.js\u000a(function (global, factory) {\u000a    if (typeof define === "function" && define.amd) {\u000a        define("OctoPrintClient", ["jquery", "lodash"], factory);\u000a    } else {\u000a        global.OctoPrintClient = factory(global.$, global._);\u000a        global.OctoPrint = new global.OctoPrintClient();\u000a    }\u000a})(this, function ($, _) {\u000a    var PluginRegistry = function (base) {\u000a        this.base = base;\u000a        this.components = {};\u000a    };\u000a\u000a    var OctoPrintClient = function (options) {\u000a        this.options = options || {\u000a            baseurl: undefined,\u000a            apikey: undefined,\u000a            locale: undefined\u000a        };\u000a\u000a        this.components = {};\u000a        this.plugins = new PluginRegistry(this);\u000a    };\u000a\u000a    OctoPrintClient.registerComponent = function (name, component) {\u000a        Object.defineProperty(OctoPrintClient.prototype, name, {\u000a            get: function () {\u000a                if (this.components[name] !== undefined) {\u000a                    return this.components[name];\u000a                }\u000a\u000a                var instance = new component(this);\u000a                this.components[name] = instance;\u000a                return instance;\u000a            },\u000a            enumerable: false,\u000a            configurable: false\u000a        });\u000a    };\u000a\u000a    OctoPrintClient.registerPluginComponent = function (name, component) {\u000a        Object.defineProperty(PluginRegistry.prototype, name, {\u000a            get: function () {\u000a                if (this.components[name] !== undefined) {\u000a                    return this.components[name];\u000a                }\u000a\u000a                var instance = new component(this.base);\u000a                this.components[name] = instance;\u000a                return instance;\u000a            },\u000a            enumerable: false,\u000a            configurable: false\u000a        });\u000a    };\u000a\u000a    var noCache = function (opts) {\u000a        opts = opts || {};\u000a\u000a        var params = $.extend({}, opts);\u000a        params.headers = $.extend({}, params.headers || {});\u000a        params.headers["Cache-Control"] = "no-cache";\u000a\u000a        return params;\u000a    };\u000a\u000a    var contentTypeJson = function (opts) {\u000a        opts = opts || {};\u000a\u000a        var params = $.extend({}, opts);\u000a        params.contentType = "application/json; charset=UTF-8";\u000a\u000a        return params;\u000a    };\u000a\u000a    var contentTypeFalse = function (opts) {\u000a        opts = opts || {};\u000a\u000a        var params = $.extend({}, opts);\u000a        params.contentType = false;\u000a\u000a        return params;\u000a    };\u000a\u000a    var noProcessData = function (opts) {\u000a        opts = opts || {};\u000a\u000a        var params = $.extend({}, opts);\u000a        params.processData = false;\u000a\u000a        return params;\u000a    };\u000a\u000a    var replaceUndefinedWithNull = function (key, value) {\u000a        if (value === undefined) {\u000a            return null;\u000a        } else {\u000a            return value;\u000a        }\u000a    };\u000a\u000a    OctoPrintClient.prototype.getBaseUrl = function () {\u000a        var url = this.options.baseurl;\u000a        if (!_.endsWith(url, "/")) {\u000a            url = url + "/";\u000a        }\u000a        return url;\u000a    };\u000a\u000a    OctoPrintClient.prototype.getRequestHeaders = function (additional) {\u000a        additional = additional || {};\u000a\u000a        var headers = $.extend({}, additional);\u000a\u000a        if (this.options.apikey) {\u000a            headers["X-Api-Key"] = this.options.apikey;\u000a        }\u000a        if (this.options.locale !== undefined) {\u000a            headers["X-Locale"] = this.options.locale;\u000a        }\u000a\u000a        return headers;\u000a    };\u000a\u000a    OctoPrintClient.prototype.ajax = function (method, url, opts) {\u000a        opts = opts || {};\u000a\u000a        method = opts.method || method || "GET";\u000a        url = opts.url || url || "";\u000a\u000a        var urlToCall = url;\u000a        if (!_.startsWith(url, "http://") && !_.startsWith(url, "https://")) {\u000a            urlToCall = this.getBaseUrl() + url;\u000a            opts.url = urlToCall;\u000a        }\u000a\u000a        var headers = this.getRequestHeaders(opts.headers);\u000a\u000a        var params = $.extend({}, opts);\u000a        params.type = method;\u000a        params.headers = headers;\u000a        params.dataType = params.dataType || "json";\u000a\u000a        return $.ajax(urlToCall, params);\u000a    };\u000a\u000a    OctoPrintClient.prototype.ajaxWithData = function (method, url, data, opts) {\u000a        opts = opts || {};\u000a\u000a        var params = $.extend({}, opts);\u000a        params.data = data;\u000a\u000a        return this.ajax(method, url, params);\u000a    };\u000a\u000a    OctoPrintClient.prototype.get = function (url, opts) {\u000a        return this.ajax("GET", url, opts);\u000a    };\u000a\u000a    OctoPrintClient.prototype.getWithQuery = function (url, data, opts) {\u000a        return this.ajaxWithData("GET", url, data, opts);\u000a    };\u000a\u000a    OctoPrintClient.prototype.post = function (url, data, opts) {\u000a        return this.ajaxWithData("POST", url, data, noCache(opts));\u000a    };\u000a\u000a    OctoPrintClient.prototype.postForm = function (url, data, opts) {\u000a        var form = new FormData();\u000a        _.each(data, function (value, key) {\u000a            form.append(key, value);\u000a        });\u000a\u000a        return this.post(url, form, contentTypeFalse(noProcessData(opts)));\u000a    };\u000a\u000a    OctoPrintClient.prototype.postJson = function (url, data, opts) {\u000a        return this.post(\u000a            url,\u000a            JSON.stringify(data, replaceUndefinedWithNull),\u000a            contentTypeJson(opts)\u000a        );\u000a    };\u000a\u000a    OctoPrintClient.prototype.put = function (url, data, opts) {\u000a        return this.ajaxWithData("PUT", url, data, noCache(opts));\u000a    };\u000a\u000a    OctoPrintClient.prototype.putJson = function (url, data, opts) {\u000a        return this.put(\u000a            url,\u000a            JSON.stringify(data, replaceUndefinedWithNull),\u000a            contentTypeJson(opts)\u000a        );\u000a    };\u000a\u000a    OctoPrintClient.prototype.patch = function (url, data, opts) {\u000a        return this.ajaxWithData("PATCH", url, data, noCache(opts));\u000a    };\u000a\u000a    OctoPrintClient.prototype.patchJson = function (url, data, opts) {\u000a        return this.patch(\u000a            url,\u000a            JSON.stringify(data, replaceUndefinedWithNull),\u000a            contentTypeJson(opts)\u000a        );\u000a    };\u000a\u000a    OctoPrintClient.prototype.delete = function (url, opts) {\u000a        return this.ajax("DELETE", url, opts);\u000a    };\u000a\u000a    OctoPrintClient.prototype.download = function (url, opts) {\u000a        var params = $.extend({}, opts || {});\u000a        params.dataType = "text";\u000a        return this.get(url, params);\u000a    };\u000a\u000a    OctoPrintClient.prototype.upload = function (url, file, filename, additional) {\u000a        additional = additional || {};\u000a\u000a        var fileData;\u000a        if (file instanceof jQuery) {\u000a            fileData = file[0].files[0];\u000a        } else if (typeof file == "string") {\u000a            fileData = $(file)[0].files[0];\u000a        } else {\u000a            fileData = file;\u000a        }\u000a\u000a        filename = filename || fileData.name;\u000a        var filesize = fileData.size;\u000a\u000a        var form = new FormData();\u000a        form.append("file", fileData, filename);\u000a\u000a        _.each(additional, function (value, key) {\u000a            form.append(key, value);\u000a        });\u000a\u000a        var deferred = $.Deferred();\u000a\u000a        var request = new XMLHttpRequest();\u000a        request.onreadystatechange = function () {\u000a            if (request.readyState == 4) {\u000a                deferred.notify({loaded: filesize, total: filesize});\u000a\u000a                var success =\u000a                    (request.status >= 200 && request.status < 300) ||\u000a                    request.status === 304;\u000a                var error, json, statusText;\u000a\u000a                try {\u000a                    json = JSON.parse(request.response);\u000a                    statusText = "success";\u000a                } catch (e) {\u000a                    success = false;\u000a                    error = e;\u000a                    statusText = "parsererror";\u000a                }\u000a\u000a                if (success) {\u000a                    deferred.resolve([json, statusText, request]);\u000a                } else {\u000a                    if (!statusText) {\u000a                        statusText = request.statusText;\u000a                    }\u000a                    deferred.reject([request, statusText, error]);\u000a                }\u000a            }\u000a        };\u000a        request.ontimeout = function () {\u000a            deferred.reject([request, "timeout", "Timeout"]);\u000a        };\u000a        request.upload.addEventListener("loadstart", function (e) {\u000a            deferred.notify({loaded: e.loaded, total: e.total});\u000a        });\u000a        request.upload.addEventListener("progress", function (e) {\u000a            deferred.notify({loaded: e.loaded, total: e.total});\u000a        });\u000a        request.upload.addEventListener("loadend", function (e) {\u000a            deferred.notify({loaded: e.loaded, total: e.total});\u000a        });\u000a\u000a        var headers = this.getRequestHeaders();\u000a\u000a        var urlToCall = url;\u000a        if (!_.startsWith(url, "http://") && !_.startsWith(url, "https://")) {\u000a            urlToCall = this.getBaseUrl() + url;\u000a        }\u000a\u000a        request.open("POST", urlToCall);\u000a        _.each(headers, function (value, key) {\u000a            request.setRequestHeader(key, value);\u000a        });\u000a        request.send(form);\u000a\u000a        return deferred.promise();\u000a    };\u000a\u000a    OctoPrintClient.prototype.issueCommand = function (url, command, payload, opts) {\u000a        payload = payload || {};\u000a\u000a        var data = $.extend({}, payload);\u000a        data.command = command;\u000a\u000a        return this.postJson(url, data, opts);\u000a    };\u000a\u000a    OctoPrintClient.prototype.getSimpleApiUrl = function (plugin) {\u000a        return "api/plugin/" + plugin;\u000a    };\u000a\u000a    OctoPrintClient.prototype.simpleApiGet = function (plugin, opts) {\u000a        return this.get(OctoPrintClient.prototype.getSimpleApiUrl(plugin), opts);\u000a    };\u000a\u000a    OctoPrintClient.prototype.simpleApiCommand = function (\u000a        plugin,\u000a        command,\u000a        payload,\u000a        opts\u000a    ) {\u000a        return this.issueCommand(\u000a            OctoPrintClient.prototype.getSimpleApiUrl(plugin),\u000a            command,\u000a            payload,\u000a            opts\u000a        );\u000a    };\u000a\u000a    OctoPrintClient.prototype.getBlueprintUrl = function (plugin) {\u000a        return "plugin/" + plugin + "/";\u000a    };\u000a\u000a    OctoPrintClient.createRejectedDeferred = function () {\u000a        var deferred = $.Deferred();\u000a        deferred.reject(arguments);\u000a        return deferred;\u000a    };\u000a\u000a    OctoPrintClient.createCustomException = function (name) {\u000a        var constructor;\u000a\u000a        if (_.isFunction(name)) {\u000a            constructor = name;\u000a        } else {\u000a            constructor = function (message) {\u000a                this.name = name;\u000a                this.message = message;\u000a                this.stack = new Error().stack;\u000a            };\u000a        }\u000a\u000a        constructor.prototype = Object.create(Error.prototype);\u000a        constructor.prototype.constructor = constructor;\u000a\u000a        return constructor;\u000a    };\u000a\u000a    OctoPrintClient.InvalidArgumentError = OctoPrintClient.createCustomException(\u000a        "InvalidArgumentError"\u000a    );\u000a\u000a    OctoPrintClient.deprecated = function (deprecatedFct, newFct, fn) {\u000a        return function () {\u000a            console.warn(\u000a                deprecatedFct +\u000a                    " is deprecated, please use the new " +\u000a                    newFct +\u000a                    " function instead"\u000a            );\u000a            return fn.apply(this, arguments);\u000a        };\u000a    };\u000a\u000a    OctoPrintClient.deprecatedMethod = function (\u000a        object,\u000a        oldNamespace,\u000a        oldFct,\u000a        newNamespace,\u000a        newFct,\u000a        fn\u000a    ) {\u000a        object[oldFct] = OctoPrintClient.deprecated(\u000a            oldNamespace + "." + oldFct,\u000a            newNamespace + "." + newFct,\u000a            fn\u000a        );\u000a    };\u000a\u000a    OctoPrintClient.deprecatedVariable = function (\u000a        object,\u000a        oldNamespace,\u000a        oldVar,\u000a        newNamespace,\u000a        newVar,\u000a        getter,\u000a        setter\u000a    ) {\u000a        Object.defineProperty(object, oldVar, {\u000a            get: function () {\u000a                return OctoPrintClient.deprecated(\u000a                    oldNamespace + "." + oldVar,\u000a                    newNamespace + "." + newVar,\u000a                    getter\u000a                )();\u000a            },\u000a            set: function (val) {\u000a                OctoPrintClient.deprecated(\u000a                    oldNamespace + "." + oldVar,\u000a                    newNamespace + "." + newVar,\u000a                    setter\u000a                )(val);\u000a            }\u000a        });\u000a    };\u000a\u000a    return OctoPrintClient;\u000a});\u000a\u000a;\u000a
p0
.