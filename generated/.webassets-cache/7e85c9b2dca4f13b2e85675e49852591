V// source: plugin/pluginmanager/clientjs/pluginmanager.js\u000a(function (global, factory) {\u000a    if (typeof define === "function" && define.amd) {\u000a        define(["OctoPrintClient"], factory);\u000a    } else {\u000a        factory(global.OctoPrintClient);\u000a    }\u000a})(this, function (OctoPrintClient) {\u000a    var OctoPrintPluginManagerClient = function (base) {\u000a        this.base = base;\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.get = function (refresh, opts) {\u000a        var refresh_repo, refresh_notices, refresh_orphans;\u000a        if (_.isPlainObject(refresh)) {\u000a            refresh_repo = refresh.repo || false;\u000a            refresh_notices = refresh.notices || false;\u000a            refresh_orphans = refresh.orphans || false;\u000a        } else {\u000a            refresh_repo = refresh;\u000a            refresh_notices = false;\u000a            refresh_orphans = false;\u000a        }\u000a\u000a        var query = [];\u000a        if (refresh_repo) query.push("refresh_repository=true");\u000a        if (refresh_notices) query.push("refresh_notices=true");\u000a        if (refresh_orphans) query.push("refresh_orphans=true");\u000a\u000a        return this.base.get(\u000a            this.base.getSimpleApiUrl("pluginmanager") +\u000a                (query.length ? "?" + query.join("&") : ""),\u000a            opts\u000a        );\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.getWithRefresh = function (opts) {\u000a        return this.get(true, opts);\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.getWithoutRefresh = function (opts) {\u000a        return this.get(false, opts);\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.install = function (\u000a        pluginUrl,\u000a        dependencyLinks,\u000a        opts\u000a    ) {\u000a        var data = {\u000a            url: pluginUrl,\u000a            dependency_links: !!dependencyLinks\u000a        };\u000a        return this.base.simpleApiCommand("pluginmanager", "install", data, opts);\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.reinstall = function (\u000a        plugin,\u000a        pluginUrl,\u000a        dependencyLinks,\u000a        opts\u000a    ) {\u000a        var data = {\u000a            url: pluginUrl,\u000a            dependency_links: !!dependencyLinks,\u000a            reinstall: plugin,\u000a            force: true\u000a        };\u000a        return this.base.simpleApiCommand("pluginmanager", "install", data, opts);\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.uninstall = function (plugin, cleanup, opts) {\u000a        // backwards compatibility to former argument list (plugin, opts)\u000a        if (arguments.length === 2 && typeof cleanup === "object") {\u000a            opts = cleanup;\u000a            cleanup = false;\u000a        }\u000a\u000a        var data = {\u000a            plugin: plugin,\u000a            cleanup: !!cleanup\u000a        };\u000a        return this.base.simpleApiCommand("pluginmanager", "uninstall", data, opts);\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.cleanup = function (plugin, opts) {\u000a        var data = {\u000a            plugin: plugin\u000a        };\u000a        return this.base.simpleApiCommand("pluginmanager", "cleanup", data, opts);\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.cleanupAll = function (plugin, opts) {\u000a        var data = {};\u000a        return this.base.simpleApiCommand("pluginmanager", "cleanup_all", data, opts);\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.enable = function (plugin, opts) {\u000a        var data = {\u000a            plugin: plugin\u000a        };\u000a        return this.base.simpleApiCommand("pluginmanager", "enable", data, opts);\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.disable = function (plugin, opts) {\u000a        var data = {\u000a            plugin: plugin\u000a        };\u000a        return this.base.simpleApiCommand("pluginmanager", "disable", data, opts);\u000a    };\u000a\u000a    OctoPrintPluginManagerClient.prototype.upload = function (file) {\u000a        return this.base.upload(\u000a            this.base.getBlueprintUrl("pluginmanager") + "upload_archive",\u000a            file\u000a        );\u000a    };\u000a\u000a    OctoPrintClient.registerPluginComponent(\u000a        "pluginmanager",\u000a        OctoPrintPluginManagerClient\u000a    );\u000a    return OctoPrintPluginManagerClient;\u000a});\u000a\u000a;\u000a
p0
.