V// source: js/app/client/printer.js\u000a(function (global, factory) {\u000a    if (typeof define === "function" && define.amd) {\u000a        define(["OctoPrintClient"], factory);\u000a    } else {\u000a        factory(global.OctoPrintClient);\u000a    }\u000a})(this, function (OctoPrintClient) {\u000a    var url = "api/printer";\u000a    var printheadUrl = url + "/printhead";\u000a    var toolUrl = url + "/tool";\u000a    var bedUrl = url + "/bed";\u000a    var chamberUrl = url + "/chamber";\u000a    var sdUrl = url + "/sd";\u000a\u000a    var OctoPrintPrinterClient = function (base) {\u000a        this.base = base;\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.issuePrintheadCommand = function (\u000a        command,\u000a        payload,\u000a        opts\u000a    ) {\u000a        return this.base.issueCommand(printheadUrl, command, payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.issueToolCommand = function (\u000a        command,\u000a        payload,\u000a        opts\u000a    ) {\u000a        return this.base.issueCommand(toolUrl, command, payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.issueBedCommand = function (command, payload, opts) {\u000a        return this.base.issueCommand(bedUrl, command, payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.issueChamberCommand = function (\u000a        command,\u000a        payload,\u000a        opts\u000a    ) {\u000a        return this.base.issueCommand(chamberUrl, command, payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.issueSdCommand = function (command, payload, opts) {\u000a        return this.base.issueCommand(sdUrl, command, payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.getFullState = function (flags, opts) {\u000a        flags = flags || {};\u000a\u000a        var history = flags.history || undefined;\u000a        var limit = flags.limit || undefined;\u000a        var exclude = flags.exclude || undefined;\u000a\u000a        var getUrl = url;\u000a        if (history || exclude) {\u000a            getUrl += "?";\u000a            if (history) {\u000a                getUrl += "history=true&";\u000a                if (limit) {\u000a                    getUrl += "limit=" + limit + "&";\u000a                }\u000a            }\u000a\u000a            if (exclude) {\u000a                getUrl += "exclude=" + exclude.join(",") + "&";\u000a            }\u000a        }\u000a\u000a        return this.base.get(getUrl, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.getToolState = function (flags, opts) {\u000a        flags = flags || {};\u000a\u000a        var history = flags.history || undefined;\u000a        var limit = flags.limit || undefined;\u000a\u000a        var getUrl = toolUrl;\u000a        if (history) {\u000a            getUrl += "?history=true";\u000a            if (limit) {\u000a                getUrl += "&limit=" + limit;\u000a            }\u000a        }\u000a\u000a        return this.base.get(getUrl, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.getBedState = function (flags, opts) {\u000a        flags = flags || {};\u000a\u000a        var history = flags.history || undefined;\u000a        var limit = flags.limit || undefined;\u000a\u000a        var getUrl = bedUrl;\u000a        if (history) {\u000a            getUrl += "?history=true";\u000a            if (limit) {\u000a                getUrl += "&limit=" + limit;\u000a            }\u000a        }\u000a\u000a        return this.base.get(getUrl, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.getChamberState = function (flags, opts) {\u000a        flags = flags || {};\u000a\u000a        var history = flags.history || undefined;\u000a        var limit = flags.limit || undefined;\u000a\u000a        var getUrl = chamberUrl;\u000a        if (history) {\u000a            getUrl += "?history=true";\u000a            if (limit) {\u000a                getUrl += "&limit=" + limit;\u000a            }\u000a        }\u000a\u000a        return this.base.get(getUrl, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.getSdState = function (opts) {\u000a        return this.base.get(sdUrl, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.jog = function (params, opts) {\u000a        params = params || {};\u000a\u000a        var absolute = params.absolute || false;\u000a\u000a        var payload = {absolute: absolute};\u000a        if (params.x) payload.x = params.x;\u000a        if (params.y) payload.y = params.y;\u000a        if (params.z) payload.z = params.z;\u000a        if (params.speed !== undefined) payload.speed = params.speed;\u000a\u000a        return this.issuePrintheadCommand("jog", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.home = function (axes, opts) {\u000a        axes = axes || [];\u000a\u000a        var payload = {\u000a            axes: axes\u000a        };\u000a\u000a        return this.issuePrintheadCommand("home", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.setFeedrate = function (factor, opts) {\u000a        factor = factor || 100;\u000a\u000a        var payload = {\u000a            factor: factor\u000a        };\u000a\u000a        return this.issuePrintheadCommand("feedrate", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.setToolTargetTemperatures = function (\u000a        targets,\u000a        opts\u000a    ) {\u000a        targets = targets || {};\u000a\u000a        var payload = {\u000a            targets: targets\u000a        };\u000a\u000a        return this.issueToolCommand("target", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.setToolTemperatureOffsets = function (\u000a        offsets,\u000a        opts\u000a    ) {\u000a        offsets = offsets || {};\u000a\u000a        var payload = {\u000a            offsets: offsets\u000a        };\u000a\u000a        return this.issueToolCommand("offset", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.selectTool = function (tool, opts) {\u000a        tool = tool || undefined;\u000a\u000a        var payload = {\u000a            tool: tool\u000a        };\u000a\u000a        return this.issueToolCommand("select", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.extrude = function (amount, opts) {\u000a        amount = amount || undefined;\u000a\u000a        var payload = {\u000a            amount: amount\u000a        };\u000a\u000a        return this.issueToolCommand("extrude", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.setFlowrate = function (factor, opts) {\u000a        factor = factor || 100;\u000a\u000a        var payload = {\u000a            factor: factor\u000a        };\u000a\u000a        return this.issueToolCommand("flowrate", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.setBedTargetTemperature = function (target, opts) {\u000a        target = target || 0;\u000a\u000a        var payload = {\u000a            target: target\u000a        };\u000a\u000a        return this.issueBedCommand("target", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.setBedTemperatureOffset = function (offset, opts) {\u000a        offset = offset || 0;\u000a\u000a        var payload = {\u000a            offset: offset\u000a        };\u000a\u000a        return this.issueBedCommand("offset", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.setChamberTargetTemperature = function (\u000a        target,\u000a        opts\u000a    ) {\u000a        target = target || 0;\u000a\u000a        var payload = {\u000a            target: target\u000a        };\u000a\u000a        return this.issueChamberCommand("target", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.setChamberTemperatureOffset = function (\u000a        offset,\u000a        opts\u000a    ) {\u000a        offset = offset || 0;\u000a\u000a        var payload = {\u000a            offset: offset\u000a        };\u000a\u000a        return this.issueChamberCommand("offset", payload, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.initSd = function (opts) {\u000a        return this.issueSdCommand("init", {}, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.refreshSd = function (opts) {\u000a        return this.issueSdCommand("refresh", {}, opts);\u000a    };\u000a\u000a    OctoPrintPrinterClient.prototype.releaseSd = function (opts) {\u000a        return this.issueSdCommand("release", {}, opts);\u000a    };\u000a\u000a    OctoPrintClient.registerComponent("printer", OctoPrintPrinterClient);\u000a    return OctoPrintPrinterClient;\u000a});\u000a\u000a;\u000a
p0
.