V// source: js/app/viewmodels/control.js\u000a$(function () {\u000a    function ControlViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.loginState = parameters[0];\u000a        self.settings = parameters[1];\u000a        self.access = parameters[2];\u000a\u000a        self._createToolEntry = function () {\u000a            return {\u000a                name: ko.observable(),\u000a                key: ko.observable()\u000a            };\u000a        };\u000a\u000a        self.isErrorOrClosed = ko.observable(undefined);\u000a        self.isOperational = ko.observable(undefined);\u000a        self.isPrinting = ko.observable(undefined);\u000a        self.isPaused = ko.observable(undefined);\u000a        self.isError = ko.observable(undefined);\u000a        self.isReady = ko.observable(undefined);\u000a        self.isLoading = ko.observable(undefined);\u000a\u000a        self.extrusionAmount = ko.observable(undefined);\u000a        self.controls = ko.observableArray([]);\u000a\u000a        self.distances = ko.observableArray([0.1, 1, 10, 100]);\u000a        self.distance = ko.observable(10);\u000a\u000a        self.tools = ko.observableArray([]);\u000a\u000a        self.feedRate = ko.observable();\u000a        self.flowRate = ko.observable();\u000a\u000a        self.feedbackControlLookup = {};\u000a\u000a        self.controlsFromServer = [];\u000a        self.additionalControls = [];\u000a\u000a        self.webcamDisableTimeout = undefined;\u000a        self.webcamLoaded = ko.observable(false);\u000a        self.webcamMjpgEnabled = ko.observable(false);\u000a        self.webcamHlsEnabled = ko.observable(false);\u000a        self.webcamError = ko.observable(false);\u000a\u000a        self.keycontrolActive = ko.observable(false);\u000a        self.keycontrolHelpActive = ko.observable(false);\u000a        self.keycontrolPossible = ko.pureComputed(function () {\u000a            return (\u000a                self.loginState.hasPermission(self.access.permissions.CONTROL) &&\u000a                self.settings.feature_keyboardControl() &&\u000a                self.isOperational() &&\u000a                !self.isPrinting() &&\u000a                !$.browser.mobile\u000a            );\u000a        });\u000a        self.showKeycontrols = ko.pureComputed(function () {\u000a            return self.keycontrolActive() && self.keycontrolPossible();\u000a        });\u000a\u000a        self.webcamRatioClass = ko.pureComputed(function () {\u000a            if (self.settings.webcam_streamRatio() == "4:3") {\u000a                return "ratio43";\u000a            } else {\u000a                return "ratio169";\u000a            }\u000a        });\u000a\u000a        self.settings.printerProfiles.currentProfileData.subscribe(function () {\u000a            self._updateExtruderCount();\u000a            self.settings.printerProfiles\u000a                .currentProfileData()\u000a                .extruder.count.subscribe(self._updateExtruderCount);\u000a        });\u000a        self._updateExtruderCount = function () {\u000a            var tools = [];\u000a\u000a            var numExtruders = self.settings.printerProfiles\u000a                .currentProfileData()\u000a                .extruder.count();\u000a            if (numExtruders > 1) {\u000a                // multiple extruders\u000a                for (var extruder = 0; extruder < numExtruders; extruder++) {\u000a                    tools[extruder] = self._createToolEntry();\u000a                    tools[extruder]["name"](gettext("Tool") + " " + extruder);\u000a                    tools[extruder]["key"]("tool" + extruder);\u000a                }\u000a            } else if (numExtruders === 1) {\u000a                // only one extruder, no need to add numbers\u000a                tools[0] = self._createToolEntry();\u000a                tools[0]["name"](gettext("Hotend"));\u000a                tools[0]["key"]("tool0");\u000a            }\u000a\u000a            self.tools(tools);\u000a        };\u000a\u000a        self.fromCurrentData = function (data) {\u000a            self._processStateData(data.state);\u000a        };\u000a\u000a        self.fromHistoryData = function (data) {\u000a            self._processStateData(data.state);\u000a        };\u000a\u000a        self._processStateData = function (data) {\u000a            self.isErrorOrClosed(data.flags.closedOrError);\u000a            self.isOperational(data.flags.operational);\u000a            self.isPaused(data.flags.paused);\u000a            self.isPrinting(data.flags.printing);\u000a            self.isError(data.flags.error);\u000a            self.isReady(data.flags.ready);\u000a            self.isLoading(data.flags.loading);\u000a        };\u000a\u000a        self.onEventSettingsUpdated = function (payload) {\u000a            // the webcam url might have changed, make sure we replace it now if the tab is focused\u000a            self._enableWebcam();\u000a            self.requestData();\u000a        };\u000a\u000a        self.onEventRegisteredMessageReceived = function (payload) {\u000a            if (payload.key in self.feedbackControlLookup) {\u000a                var outputs = self.feedbackControlLookup[payload.key];\u000a                _.each(payload.outputs, function (value, key) {\u000a                    if (outputs.hasOwnProperty(key)) {\u000a                        outputs[key](value);\u000a                    }\u000a                });\u000a            }\u000a        };\u000a\u000a        self.rerenderControls = function () {\u000a            var allControls = self.controlsFromServer.concat(self.additionalControls);\u000a            self.controls(self._processControls(allControls));\u000a        };\u000a\u000a        self.requestData = function () {\u000a            if (!self.loginState.hasPermission(self.access.permissions.CONTROL)) {\u000a                return;\u000a            }\u000a\u000a            OctoPrint.control.getCustomControls().done(function (response) {\u000a                self._fromResponse(response);\u000a            });\u000a        };\u000a\u000a        self._fromResponse = function (response) {\u000a            self.controlsFromServer = response.controls;\u000a            self.rerenderControls();\u000a        };\u000a\u000a        self._processControls = function (controls) {\u000a            for (var i = 0; i < controls.length; i++) {\u000a                controls[i] = self._processControl(controls[i]);\u000a            }\u000a            return controls;\u000a        };\u000a\u000a        self._processControl = function (control) {\u000a            if (control.hasOwnProperty("processed") && control.processed) {\u000a                return control;\u000a            }\u000a\u000a            if (\u000a                control.hasOwnProperty("template") &&\u000a                control.hasOwnProperty("key") &&\u000a                control.hasOwnProperty("template_key") &&\u000a                !control.hasOwnProperty("output")\u000a            ) {\u000a                control.output = ko.observable(control.default || "");\u000a                if (!self.feedbackControlLookup.hasOwnProperty(control.key)) {\u000a                    self.feedbackControlLookup[control.key] = {};\u000a                }\u000a                self.feedbackControlLookup[control.key][control.template_key] =\u000a                    control.output;\u000a            }\u000a\u000a            if (control.hasOwnProperty("children")) {\u000a                control.children = ko.observableArray(\u000a                    self._processControls(control.children)\u000a                );\u000a                if (\u000a                    !control.hasOwnProperty("layout") ||\u000a                    !(\u000a                        control.layout == "vertical" ||\u000a                        control.layout == "horizontal" ||\u000a                        control.layout == "horizontal_grid"\u000a                    )\u000a                ) {\u000a                    control.layout = "vertical";\u000a                }\u000a\u000a                if (!control.hasOwnProperty("collapsed")) {\u000a                    control.collapsed = false;\u000a                }\u000a            }\u000a\u000a            if (control.hasOwnProperty("input")) {\u000a                var attributeToInt = function (obj, key, def) {\u000a                    if (obj.hasOwnProperty(key)) {\u000a                        var val = obj[key];\u000a                        if (_.isNumber(val)) {\u000a                            return val;\u000a                        }\u000a\u000a                        var parsedVal = parseInt(val);\u000a                        if (!isNaN(parsedVal)) {\u000a                            return parsedVal;\u000a                        }\u000a                    }\u000a                    return def;\u000a                };\u000a\u000a                _.each(control.input, function (element) {\u000a                    if (element.hasOwnProperty("slider") && _.isObject(element.slider)) {\u000a                        element.slider["min"] = attributeToInt(element.slider, "min", 0);\u000a                        element.slider["max"] = attributeToInt(\u000a                            element.slider,\u000a                            "max",\u000a                            255\u000a                        );\u000a\u000a                        // try defaultValue, default to min\u000a                        var defaultValue = attributeToInt(\u000a                            element,\u000a                            "default",\u000a                            element.slider.min\u000a                        );\u000a\u000a                        // if default value is not within range of min and max, correct that\u000a                        if (\u000a                            !_.inRange(\u000a                                defaultValue,\u000a                                element.slider.min,\u000a                                element.slider.max\u000a                            )\u000a                        ) {\u000a                            // use bound closer to configured default value\u000a                            defaultValue =\u000a                                defaultValue < element.slider.min\u000a                                    ? element.slider.min\u000a                                    : element.slider.max;\u000a                        }\u000a\u000a                        element.value = ko.observable(defaultValue);\u000a                    } else {\u000a                        element.slider = false;\u000a                        element.value = ko.observable(\u000a                            element.hasOwnProperty("default")\u000a                                ? element["default"]\u000a                                : undefined\u000a                        );\u000a                    }\u000a                });\u000a            }\u000a\u000a            if (control.hasOwnProperty("javascript")) {\u000a                var js = control.javascript;\u000a\u000a                // if js is a function everything's fine already, but if it's a string we need to eval that first\u000a                if (!_.isFunction(js)) {\u000a                    control.javascript = function (data) {\u000a                        eval(js);\u000a                    };\u000a                }\u000a            }\u000a\u000a            if (control.hasOwnProperty("enabled")) {\u000a                var enabled = control.enabled;\u000a\u000a                // if js is a function everything's fine already, but if it's a string we need to eval that first\u000a                if (!_.isFunction(enabled)) {\u000a                    control.enabled = function (data) {\u000a                        return eval(enabled);\u000a                    };\u000a                }\u000a            }\u000a\u000a            if (!control.hasOwnProperty("additionalClasses")) {\u000a                control.additionalClasses = "";\u000a            }\u000a\u000a            control.processed = true;\u000a            return control;\u000a        };\u000a\u000a        self.isCustomEnabled = function (data) {\u000a            if (data.hasOwnProperty("enabled")) {\u000a                return data.enabled(data);\u000a            } else {\u000a                return (\u000a                    self.loginState.hasPermission(self.access.permissions.CONTROL) &&\u000a                    self.isOperational()\u000a                );\u000a            }\u000a        };\u000a\u000a        self.clickCustom = function (data) {\u000a            var callback;\u000a            if (data.hasOwnProperty("javascript")) {\u000a                callback = data.javascript;\u000a            } else {\u000a                callback = self.sendCustomCommand;\u000a            }\u000a\u000a            if (data.confirm) {\u000a                showConfirmationDialog({\u000a                    message: data.confirm,\u000a                    onproceed: function (e) {\u000a                        callback(data);\u000a                    }\u000a                });\u000a            } else {\u000a                callback(data);\u000a            }\u000a        };\u000a\u000a        self.sendJogCommand = function (axis, multiplier, distance) {\u000a            if (typeof distance === "undefined") distance = self.distance();\u000a            if (\u000a                self.settings.printerProfiles.currentProfileData() &&\u000a                self.settings.printerProfiles.currentProfileData()["axes"] &&\u000a                self.settings.printerProfiles.currentProfileData()["axes"][axis] &&\u000a                self.settings.printerProfiles\u000a                    .currentProfileData()\u000a                    ["axes"][axis]["inverted"]()\u000a            ) {\u000a                multiplier *= -1;\u000a            }\u000a\u000a            var data = {};\u000a            data[axis] = distance * multiplier;\u000a            OctoPrint.printer.jog(data);\u000a        };\u000a\u000a        self.sendHomeCommand = function (axis) {\u000a            OctoPrint.printer.home(axis);\u000a        };\u000a\u000a        self.feedRateBusy = ko.observable(false);\u000a        self.feedRateResetter = ko.observable();\u000a        self.sendFeedRateCommand = function () {\u000a            var rate = self.feedRate();\u000a            if (!rate) return;\u000a\u000a            rate = _.parseInt(self.feedRate());\u000a            self.feedRateBusy(true);\u000a            OctoPrint.printer\u000a                .setFeedrate(rate)\u000a                .done(function () {\u000a                    self.feedRate(undefined);\u000a                })\u000a                .always(function () {\u000a                    self.feedRateBusy(false);\u000a                });\u000a        };\u000a        self.resetFeedRateDisplay = function () {\u000a            self.cancelFeedRateDisplayReset();\u000a            self.feedRateResetter(\u000a                setTimeout(function () {\u000a                    self.feedRate(undefined);\u000a                    self.feedRateResetter(undefined);\u000a                }, 5000)\u000a            );\u000a        };\u000a        self.cancelFeedRateDisplayReset = function () {\u000a            var resetter = self.feedRateResetter();\u000a            if (resetter) {\u000a                clearTimeout(resetter);\u000a                self.feedRateResetter(undefined);\u000a            }\u000a        };\u000a\u000a        self.sendExtrudeCommand = function () {\u000a            self._sendECommand(1);\u000a        };\u000a\u000a        self.sendRetractCommand = function () {\u000a            self._sendECommand(-1);\u000a        };\u000a\u000a        self.flowRateBusy = ko.observable(false);\u000a        self.flowRateResetter = ko.observable();\u000a        self.sendFlowRateCommand = function () {\u000a            var rate = self.flowRate();\u000a            if (!rate) return;\u000a\u000a            rate = _.parseInt(self.flowRate());\u000a            self.flowRateBusy(true);\u000a            OctoPrint.printer\u000a                .setFlowrate(rate)\u000a                .done(function () {\u000a                    self.flowRate(undefined);\u000a                })\u000a                .always(function () {\u000a                    self.flowRateBusy(false);\u000a                });\u000a        };\u000a        self.resetFlowRateDisplay = function () {\u000a            self.cancelFlowRateDisplayReset();\u000a            self.flowRateResetter(\u000a                setTimeout(function () {\u000a                    self.flowRate(undefined);\u000a                    self.flowRateResetter(undefined);\u000a                }, 5000)\u000a            );\u000a        };\u000a        self.cancelFlowRateDisplayReset = function () {\u000a            var resetter = self.flowRateResetter();\u000a            if (resetter) {\u000a                clearTimeout(resetter);\u000a                self.flowRateResetter(undefined);\u000a            }\u000a        };\u000a\u000a        self._sendECommand = function (dir) {\u000a            var length = self.extrusionAmount();\u000a            OctoPrint.printer.extrude(length * dir);\u000a        };\u000a\u000a        self.sendSelectToolCommand = function (data) {\u000a            if (!data || !data.key()) return;\u000a\u000a            OctoPrint.printer.selectTool(data.key());\u000a        };\u000a\u000a        self.sendCustomCommand = function (command) {\u000a            if (!command) return;\u000a\u000a            var parameters = {};\u000a            if (command.hasOwnProperty("input")) {\u000a                _.each(command.input, function (input) {\u000a                    if (\u000a                        !input.hasOwnProperty("parameter") ||\u000a                        !input.hasOwnProperty("value")\u000a                    ) {\u000a                        return;\u000a                    }\u000a\u000a                    parameters[input.parameter] = input.value();\u000a                });\u000a            }\u000a\u000a            if (command.hasOwnProperty("command") || command.hasOwnProperty("commands")) {\u000a                var commands = command.commands || [command.command];\u000a                OctoPrint.control.sendGcodeWithParameters(commands, parameters);\u000a            } else if (command.hasOwnProperty("script")) {\u000a                var script = command.script;\u000a                var context = command.context || {};\u000a                OctoPrint.control.sendGcodeScriptWithParameters(\u000a                    script,\u000a                    context,\u000a                    parameters\u000a                );\u000a            }\u000a        };\u000a\u000a        self.displayMode = function (customControl) {\u000a            if (customControl.hasOwnProperty("children")) {\u000a                if (customControl.name) {\u000a                    return "customControls_containerTemplate_collapsable";\u000a                } else {\u000a                    return "customControls_containerTemplate_nameless";\u000a                }\u000a            } else {\u000a                return "customControls_controlTemplate";\u000a            }\u000a        };\u000a\u000a        self.rowCss = function (customControl) {\u000a            var span = "span2";\u000a            var offset = "";\u000a            if (customControl.hasOwnProperty("width")) {\u000a                span = "span" + customControl.width;\u000a            }\u000a            if (customControl.hasOwnProperty("offset")) {\u000a                offset = "offset" + customControl.offset;\u000a            }\u000a            return span + " " + offset;\u000a        };\u000a\u000a        self.onUserPermissionsChanged = self.onUserLoggedIn = self.onUserLoggedOut = function () {\u000a            self.requestData();\u000a        };\u000a\u000a        self._disableWebcam = function () {\u000a            // only disable webcam stream if tab is out of focus for more than 5s, otherwise we might cause\u000a            // more load by the constant connection creation than by the actual webcam stream\u000a\u000a            // safari bug doesn't release the mjpeg stream, so we just disable this for safari.\u000a            if (OctoPrint.coreui.browser.safari) {\u000a                return;\u000a            }\u000a\u000a            var timeout = self.settings.webcam_streamTimeout() || 5;\u000a            self.webcamDisableTimeout = setTimeout(function () {\u000a                log.debug("Unloading webcam stream");\u000a                $("#webcam_image").attr("src", "");\u000a                self.webcamLoaded(false);\u000a            }, timeout * 1000);\u000a        };\u000a\u000a        self._enableWebcam = function () {\u000a            if (\u000a                OctoPrint.coreui.selectedTab != "#control" ||\u000a                !OctoPrint.coreui.browserTabVisible\u000a            ) {\u000a                return;\u000a            }\u000a\u000a            if (self.webcamDisableTimeout != undefined) {\u000a                clearTimeout(self.webcamDisableTimeout);\u000a            }\u000a\u000a            // Determine stream type and switch to corresponding webcam.\u000a            var streamType = determineWebcamStreamType(self.settings.webcam_streamUrl());\u000a            if (streamType == "mjpg") {\u000a                self._switchToMjpgWebcam();\u000a            } else if (streamType == "hls") {\u000a                self._switchToHlsWebcam();\u000a            } else {\u000a                throw "Unknown stream type " + streamType;\u000a            }\u000a        };\u000a\u000a        self.onWebcamLoaded = function () {\u000a            if (self.webcamLoaded()) return;\u000a\u000a            log.debug("Webcam stream loaded");\u000a            self.webcamLoaded(true);\u000a            self.webcamError(false);\u000a        };\u000a\u000a        self.onWebcamErrored = function () {\u000a            log.debug("Webcam stream failed to load/disabled");\u000a            self.webcamLoaded(false);\u000a            self.webcamError(true);\u000a        };\u000a\u000a        self.onTabChange = function (current, previous) {\u000a            if (current == "#control") {\u000a                self._enableWebcam();\u000a            } else if (previous == "#control") {\u000a                self._disableWebcam();\u000a            }\u000a        };\u000a\u000a        self.onBrowserTabVisibilityChange = function (status) {\u000a            if (status) {\u000a                self._enableWebcam();\u000a            } else {\u000a                self._disableWebcam();\u000a            }\u000a        };\u000a\u000a        self.onAllBound = function (allViewModels) {\u000a            var additionalControls = [];\u000a            callViewModels(allViewModels, "getAdditionalControls", function (method) {\u000a                additionalControls = additionalControls.concat(method());\u000a            });\u000a            if (additionalControls.length > 0) {\u000a                self.additionalControls = additionalControls;\u000a                self.rerenderControls();\u000a            }\u000a            self._enableWebcam();\u000a\u000a            self.extrusionAmount(self.settings.printer_defaultExtrusionLength());\u000a        };\u000a\u000a        self.onFocus = function (data, event) {\u000a            if (!self.settings.feature_keyboardControl()) return;\u000a            self.keycontrolActive(true);\u000a        };\u000a\u000a        self.onMouseOver = function (data, event) {\u000a            if (!self.settings.feature_keyboardControl()) return;\u000a            $("#webcam_container").focus();\u000a            self.keycontrolActive(true);\u000a        };\u000a\u000a        self.onMouseOut = function (data, event) {\u000a            if (!self.settings.feature_keyboardControl()) return;\u000a            $("#webcam_container").blur();\u000a            self.keycontrolActive(false);\u000a        };\u000a\u000a        self.toggleKeycontrolHelp = function () {\u000a            self.keycontrolHelpActive(!self.keycontrolHelpActive());\u000a        };\u000a\u000a        self.onKeyDown = function (data, event) {\u000a            if (!self.settings.feature_keyboardControl()) return;\u000a\u000a            var button = undefined;\u000a            var visualizeClick = true;\u000a\u000a            switch (event.which) {\u000a                case 37: // left arrow key\u000a                    // X-\u000a                    button = $("#control-xdec");\u000a                    break;\u000a                case 38: // up arrow key\u000a                    // Y+\u000a                    button = $("#control-yinc");\u000a                    break;\u000a                case 39: // right arrow key\u000a                    // X+\u000a                    button = $("#control-xinc");\u000a                    break;\u000a                case 40: // down arrow key\u000a                    // Y-\u000a                    button = $("#control-ydec");\u000a                    break;\u000a                case 49: // number 1\u000a                case 97: // numpad 1\u000a                    // Distance 0.1\u000a                    button = $("#control-distance01");\u000a                    visualizeClick = false;\u000a                    break;\u000a                case 50: // number 2\u000a                case 98: // numpad 2\u000a                    // Distance 1\u000a                    button = $("#control-distance1");\u000a                    visualizeClick = false;\u000a                    break;\u000a                case 51: // number 3\u000a                case 99: // numpad 3\u000a                    // Distance 10\u000a                    button = $("#control-distance10");\u000a                    visualizeClick = false;\u000a                    break;\u000a                case 52: // number 4\u000a                case 100: // numpad 4\u000a                    // Distance 100\u000a                    button = $("#control-distance100");\u000a                    visualizeClick = false;\u000a                    break;\u000a                case 33: // page up key\u000a                case 87: // w key\u000a                    // z lift up\u000a                    button = $("#control-zinc");\u000a                    break;\u000a                case 34: // page down key\u000a                case 83: // s key\u000a                    // z lift down\u000a                    button = $("#control-zdec");\u000a                    break;\u000a                case 36: // home key\u000a                    // xy home\u000a                    button = $("#control-xyhome");\u000a                    break;\u000a                case 35: // end key\u000a                    // z home\u000a                    button = $("#control-zhome");\u000a                    break;\u000a                default:\u000a                    event.preventDefault();\u000a                    return false;\u000a            }\u000a\u000a            if (button === undefined) {\u000a                return false;\u000a            } else {\u000a                event.preventDefault();\u000a                if (visualizeClick) {\u000a                    button.addClass("active");\u000a                    setTimeout(function () {\u000a                        button.removeClass("active");\u000a                    }, 150);\u000a                }\u000a                button.click();\u000a            }\u000a        };\u000a\u000a        self.stripDistanceDecimal = function (distance) {\u000a            return distance.toString().replace(".", "");\u000a        };\u000a\u000a        self._switchToMjpgWebcam = function () {\u000a            var webcamImage = $("#webcam_image");\u000a            var currentSrc = webcamImage.attr("src");\u000a\u000a            // safari bug doesn't release the mjpeg stream, so we just set it up the once\u000a            if (OctoPrint.coreui.browser.safari && currentSrc != undefined) {\u000a                return;\u000a            }\u000a\u000a            var newSrc = self.settings.webcam_streamUrl();\u000a            if (currentSrc != newSrc) {\u000a                if (newSrc.lastIndexOf("?") > -1) {\u000a                    newSrc += "&";\u000a                } else {\u000a                    newSrc += "?";\u000a                }\u000a                newSrc += new Date().getTime();\u000a\u000a                self.webcamLoaded(false);\u000a                self.webcamError(false);\u000a                webcamImage.attr("src", newSrc);\u000a\u000a                self.webcamHlsEnabled(false);\u000a                self.webcamMjpgEnabled(true);\u000a            }\u000a        };\u000a\u000a        self._switchToHlsWebcam = function () {\u000a            var video = document.getElementById("webcam_hls");\u000a\u000a            if (video.canPlayType("application/vnd.apple.mpegurl")) {\u000a                video.src = self.settings.webcam_streamUrl();\u000a            } else if (Hls.isSupported()) {\u000a                var hls = new Hls();\u000a                hls.loadSource(self.settings.webcam_streamUrl());\u000a                hls.attachMedia(video);\u000a            }\u000a\u000a            self.webcamMjpgEnabled(false);\u000a            self.webcamHlsEnabled(true);\u000a        };\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push({\u000a        construct: ControlViewModel,\u000a        dependencies: ["loginStateViewModel", "settingsViewModel", "accessViewModel"],\u000a        elements: ["#control", "#control_link"]\u000a    });\u000a});\u000a\u000a;\u000a
p0
.