V// source: plugin/taborder/js/taborder.js\u000a$(function() {\u000a	function taborderViewModel(parameters) {\u000a		var self = this;\u000a\u000a		self.settings = parameters[0];\u000a		self.touchui = parameters[1];\u000a		self.tabs = ko.observableArray();\u000a		self.hidden_tabs = ko.observableArray();\u000a		self.selectedTab = ko.observable();\u000a		self.reloadOverlay = undefined;\u000a		self.availableTabs = ko.observableArray();\u000a		self.assignedTabs = ko.pureComputed(function(){\u000a								var tabs = ko.utils.arrayMap(self.tabs(), function(tab) {\u000a										return tab.name();\u000a									});\u000a								return tabs.sort();\u000a							});\u000a		self.hiddenTabs = ko.pureComputed(function(){\u000a								var tabs = ko.utils.arrayMap(self.hidden_tabs(), function(tab) {\u000a										return tab.name();\u000a									});\u000a								return tabs.sort();\u000a							});\u000a		self.hiddenTabsByID = ko.pureComputed(function(){\u000a								var tabs = ko.utils.arrayMap(self.hidden_tabs(), function(tab) {\u000a										if(tab.name().indexOf('plugin_') > -1){\u000a											return 'tab_' + tab.name() + '_link';\u000a										} else {\u000a											return tab.name().replace('temperature','temp').replace('terminal','term').replace('gcodeviewer','gcode') + '_link';\u000a										}\u000a									});\u000a								return tabs;\u000a							});\u000a		self.unassignedTabs = ko.pureComputed(function() {\u000a								//find out the categories that are missing from uniqueNames\u000a								var combined_tabs = self.assignedTabs().concat(self.hiddenTabs())\u000a								var differences = ko.utils.compareArrays(self.availableTabs().sort(), combined_tabs.sort());\u000a								//return a flat list of differences\u000a								var results = [];\u000a								ko.utils.arrayForEach(differences, function(difference) {\u000a									if (difference.status === "deleted") {\u000a										results.push(difference.value);\u000a									}\u000a								});\u000a								return results;\u000a							});\u000a\u000a		self.onBeforeBinding = function() {\u000a			self.tabs(self.settings.settings.plugins.taborder.tabs());\u000a			self.hidden_tabs(self.settings.settings.plugins.taborder.hidden_tabs());\u000a		}\u000a\u000a		self.onEventSettingsUpdated = function (payload) {\u000a			self.tabs(self.settings.settings.plugins.taborder.tabs());\u000a			self.hidden_tabs(self.settings.settings.plugins.taborder.hidden_tabs());\u000a			if (self.active_settings_tabs !== ko.toJSON(self.settings.settings.plugins.taborder.tabs) || self.active_settings_hidden_tabs !== ko.toJSON(self.settings.settings.plugins.taborder.hidden_tabs)){\u000a				self.showReloadDialog();\u000a			}\u000a		}\u000a\u000a		self.onAfterBinding = function(){\u000a			self.active_settings_tabs = ko.toJSON(self.settings.settings.plugins.taborder.tabs);\u000a			self.active_settings_hidden_tabs = ko.toJSON(self.settings.settings.plugins.taborder.hidden_tabs);\u000a			$('ul#tabs li:not(.dropdown)').each(function(){\u000a				var tabid = $(this).attr('id');\u000a				if(tabid.match(/^(tab_)?(.+)_link$/g)){\u000a					self.availableTabs.push(tabid.replace('temp_link','temperature_link').replace('term_link','terminal_link').replace(/^gcode_link$/,'gcodeviewer_link').replace(/^(tab_)?(.+)_link$/g,'$2'));\u000a				}\u000a			});\u000a		}\u000a\u000a		self.onAllBound = function(allViewModels){\u000a			self.renderTabs();\u000a		}\u000a\u000a		self.renderTabs = function(){\u000a			if (self.touchui && self.touchui.isActive()) {\u000a				return\u000a			}\u000a\u000a			ko.utils.arrayForEach(self.tabs(), function(tab) {\u000a				var tabid = tab.name().replace('temperature','temp').replace('terminal','term').replace('gcodeviewer','gcode'); // fix for default tab ids not matching links.\u000a				if (!tab.showtext()){\u000a					$('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').text('');\u000a				}\u000a				if (tab.usetitle()){\u000a					$('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').text(tab.icon_tooltip());\u000a				}\u000a				if ($('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').children('i').length > 0) {\u000a					$('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').attr('title',tab.icon_tooltip()).children('i').addClass(tab.icon()).css({'color':tab.icon_color()});\u000a				} else {\u000a					$('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').attr('title',tab.icon_tooltip()).prepend('<i class="'+tab.icon()+'" style="color:'+tab.icon_color()+'"></i> ');\u000a				}\u000a			});\u000a			ko.utils.arrayForEach(self.hidden_tabs(), function(tab) {\u000a				var tabid = tab.name().replace('temperature','temp').replace('terminal','term').replace('gcodeviewer','gcode'); // fix for default tab ids not matching links.\u000a				if (!tab.showtext()){\u000a					$('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').text('');\u000a				}\u000a				if (tab.usetitle()){\u000a					$('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').text(tab.icon_tooltip());\u000a				}\u000a				if ($('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').children('i').length > 0) {\u000a					$('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').attr('title',tab.icon_tooltip()).children('i').addClass(tab.icon()).css({'color':tab.icon_color()});\u000a				} else {\u000a					$('li#'+tabid+'_link a,li#tab_'+tabid+'_link a').attr('title',tab.icon_tooltip()).prepend('<i class="'+tab.icon()+'" style="color:'+tab.icon_color()+'"></i> ');\u000a				}\u000a			});\u000a		}\u000a\u000a		self.onStartupComplete = function(){\u000a			if (self.touchui && self.touchui.isActive()) {\u000a				return\u000a			}\u000a\u000a			if($('#tabs').data('tabdrop') == undefined){\u000a				$('#tabs').tabdrop({hidden: self.hiddenTabsByID()});\u000a			}\u000a			setTimeout(function(){$(window).resize();},200);\u000a		}\u000a\u000a		self.showReloadDialog = function(){\u000a			$('#reloadui_overlay_wrapper > div > div > p:nth-child(2)').html('Tab Order changes detected, you must force a browser refresh now for these new changes to take effect. This will not interrupt any print jobs you might have ongoing. Please hold down the <code>shift</code> or <code>ctrl</code> key (based on your browser) and press F5.');\u000a			$('#reloadui_overlay_wrapper button').remove();\u000a			$('#reloadui_overlay').modal();\u000a		};\u000a\u000a		self.addMissingTab = function(data) {\u000a			self.selectedTab({'name':ko.observable(data),'icon':ko.observable(''),'showtext':ko.observable(true),'usetitle':ko.observable(false),'icon_color':ko.observable(''),'icon_tooltip':ko.observable('')});\u000a			self.settings.settings.plugins.taborder.tabs.push(self.selectedTab());\u000a			self.tabs(self.settings.settings.plugins.taborder.tabs());\u000a			$('#TabOrderEditor').modal('show');\u000a		}\u000a\u000a		self.addHiddenMissingTab = function(data) {\u000a			self.selectedTab({'name':ko.observable(data),'icon':ko.observable(''),'showtext':ko.observable(true),'usetitle':ko.observable(false),'icon_color':ko.observable(''),'icon_tooltip':ko.observable('')});\u000a			self.settings.settings.plugins.taborder.hidden_tabs.push(self.selectedTab());\u000a			self.hidden_tabs(self.settings.settings.plugins.taborder.hidden_tabs());\u000a			$('#TabOrderEditor').modal('show');\u000a		}\u000a\u000a		self.editTab = function(data) {\u000a			console.log(data);\u000a			self.selectedTab(data);\u000a			$('#TabOrderEditor').modal('show');\u000a		}\u000a\u000a		self.removeTab = function(data) {\u000a			self.settings.settings.plugins.taborder.tabs.remove(data);\u000a			self.tabs(self.settings.settings.plugins.taborder.tabs());\u000a		}\u000a\u000a		self.removeHiddenTab = function(data) {\u000a			self.settings.settings.plugins.taborder.hidden_tabs.remove(data);\u000a			self.hidden_tabs(self.settings.settings.plugins.taborder.hidden_tabs());\u000a		}\u000a	}\u000a\u000a	OCTOPRINT_VIEWMODELS.push({\u000a		construct: taborderViewModel,\u000a		dependencies: ["settingsViewModel", "touchUIViewModel"],\u000a		optional: ["touchUIViewModel"],\u000a		elements: ["#settings_plugin_taborder"]\u000a	});\u000a});\u000a\u000a;\u000a
p0
.